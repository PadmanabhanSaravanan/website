<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swayaan LMS – Documentation</title>
    <link>https://padmanabhansaravanan.github.io/website/docs/</link>
    <description>Recent content in Documentation on Swayaan LMS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="https://padmanabhansaravanan.github.io/website/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: HTTP</title>
      <link>https://padmanabhansaravanan.github.io/website/docs/http/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://padmanabhansaravanan.github.io/website/docs/http/readme/</guid>
      <description>
        
        
        &lt;h1 id=&#34;http&#34;&gt;HTTP&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/logo.png&#34; alt=&#34;image logo&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;table-of-content&#34;&gt;TABLE OF CONTENT&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#introduction-to-http&#34;&gt;&lt;strong&gt;Introduction to HTTP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-parameters&#34;&gt;&lt;strong&gt;HTTP Parameters&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#working-of-web&#34;&gt;&lt;strong&gt;Working of web&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-messages&#34;&gt;&lt;strong&gt;HTTP Messages&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-request&#34;&gt;&lt;strong&gt;HTTP Requests&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-responses&#34;&gt;&lt;strong&gt;HTTP Responses&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-methods&#34;&gt;&lt;strong&gt;HTTP Methods&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-status-codes&#34;&gt;&lt;strong&gt;HTTP Status Codes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-header-fields&#34;&gt;&lt;strong&gt;HTTP Header Fields&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-cookies&#34;&gt;&lt;strong&gt;HTTP Cookies&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-caching&#34;&gt;&lt;strong&gt;HTTP Caching&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-url-encoding&#34;&gt;&lt;strong&gt;HTTP URL Encoding&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-security&#34;&gt;&lt;strong&gt;HTTP Security&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-examples&#34;&gt;&lt;strong&gt;HTTP Examples&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reference&#34;&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction-to-http&#34;&gt;Introduction to HTTP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what-is-http&#34;&gt;&lt;strong&gt;What is HTTP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#features-of-http&#34;&gt;&lt;strong&gt;Features of HTTP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-architecture&#34;&gt;&lt;strong&gt;HTTP Architecture&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#advantages-of-http&#34;&gt;&lt;strong&gt;Advantages of HTTP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#disadvantages-of-http&#34;&gt;&lt;strong&gt;Disadvantages of HTTP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;what-is-http&#34;&gt;What is HTTP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;HTTP stands for Hyper Text Transfer Protocol&lt;/li&gt;
&lt;li&gt;The primary function of HTTP is to establish a connection with the server and send HTML pages back to the user&amp;rsquo;s browser.&lt;/li&gt;
&lt;li&gt;HTTP is an application protocol that runs on top of the TCP/IP suite of protocols, which forms the foundation of the internet.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;TCP/IP&lt;/strong&gt; - Transmission Control Protocol/Internet Protocol
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/http.png&#34; alt=&#34;image http&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;features-of-http&#34;&gt;Features of HTTP&lt;/h4&gt;
&lt;p&gt;There are three basic features of HTTP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP is connectionless&lt;/strong&gt; : The HTTP client, i.e., a browser initiates an HTTP request and after a request is made, the client waits for the response. The server processes the request and sends a response back after which client disconnect the connection. So client and server knows about each other during current request and response only. Further requests are made on new connection like client and server are new to each other.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP is media independent&lt;/strong&gt;: It means, any type of data can be sent by HTTP as long as both the client and the server know how to handle the data content. It is required for the client as well as the server to specify the content type using appropriate MIME-type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP is stateless:&lt;/strong&gt; As mentioned above, HTTP is connectionless and it is a direct result of HTTP being a stateless protocol. The server and client are aware of each other only during a current request. Afterwards, both of them forget about each other. Due to this nature of the protocol, neither the client nor the browser can retain information between different requests across the web pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;http-architecture&#34;&gt;HTTP Architecture&lt;/h4&gt;
&lt;p&gt;The following diagram shows a very basic architecture of a web application and depicts where HTTP sits:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/Architecture.png&#34; alt=&#34;image architecture&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The HTTP protocol is a request/response protocol based on the client/server based architecture where web browsers, robots and search engines, etc. act like HTTP clients, and the Web server acts as a server.&lt;/p&gt;
&lt;p&gt;Client
The HTTP client sends a request to the server in the form of a request method, URI, and protocol version, followed by a MIME-like message containing request modifiers, client information, and possible body content over a TCP/IP connection.&lt;/p&gt;
&lt;p&gt;Server
The HTTP server responds with a status line, including the message&amp;rsquo;s protocol version and a success or error code, followed by a MIME-like message containing server information, entity meta information, and possible entity-body content.&lt;/p&gt;
&lt;h4 id=&#34;advantages-of-http&#34;&gt;Advantages of HTTP&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Addressing&lt;/strong&gt;: HTTP uses advanced scheme of addressing. It assigns IP address with recognizable names so that it can be identified easily in the World Wide Web. Compared to the standard procedure of IP address with a series of numbers, using this the public can easily engage with the internet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexibility&lt;/strong&gt; : Whenever there are additional capabilities needed by an application, HTTP has the capability to download extensions or plugins and display the relevant data. These can include Flash players and Acrobat reader.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt; : In HTTP each files is downloaded from an independent connection and then gets closed. Due to this no more than one single element of a webpage gets transferred. Therefore, the chance of interception during transmission is minimized here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt; : Only when the connection is established, the handshaking process will take place in HTTP. Hence, there will be no handshaking procedure following a request. This significantly reduces latency in the connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Accessibility&lt;/strong&gt; : When the page is loaded for the first time, all of the HTTP pages gets stored inside the internet caches known as the page cache. Therefore, once the page is visited again, the content is loaded quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;disadvantages-of-http&#34;&gt;Disadvantages of HTTP&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Integrity&lt;/strong&gt; : Since there are no any encryption methods used in HTTP, there are chances of someone altering the content. That is the reason why HTTP is considered to be an insecure method prone to data integrity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Privacy&lt;/strong&gt; : Privacy is another problem faced in a HTTP connection. If any hacker manages to intercept the request they can view all the content present in the web page. Besides that they can also gather confidential informations such as the username and the password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Server Availability&lt;/strong&gt; : Even if HTTP receives all the data that it needs, clients does not take measures to close the connection. Therefore, during this time period, server will not be present.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Administrative Overhead&lt;/strong&gt; : For transmitting a web page, a HTTP needs to create multiple connections. This causes administrative overhead in the connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IoT Device Support&lt;/strong&gt; : HTTP uses more number of system resources which leads to more power consumption. Since IoT device today contain wireless sensor networks, it is not suitable to use HTTP.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;http-parameters&#34;&gt;HTTP Parameters&lt;/h2&gt;
&lt;p&gt;In this section, we will discuss various HTTP parameters and their syntax. For example, date and time format, character set, etc. These parameters are used in the construction of our request and response message while writing the HTTP program of the client or server.&lt;/p&gt;
&lt;p&gt;The various parameters of HTTP are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#http-version&#34;&gt;&lt;strong&gt;HTTP Version&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uniform-resource-identifiers&#34;&gt;&lt;strong&gt;Uniform Resource Identifiers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#date-or-time-formats&#34;&gt;&lt;strong&gt;Date/Time Formats&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#character-sets&#34;&gt;&lt;strong&gt;Character Sets&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#content-encodings&#34;&gt;&lt;strong&gt;Content Encodings&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#media-types&#34;&gt;&lt;strong&gt;Media Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#language-tags&#34;&gt;&lt;strong&gt;Language Tags&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;http-version&#34;&gt;HTTP Version&lt;/h4&gt;
&lt;p&gt;HTTP uses a &lt;strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;.&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt; numbering scheme to indicate versions of the protocol. The version of an HTTP message is indicated by an HTTP-Version field in the first line.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP-Version   = &amp;#34;HTTP&amp;#34; &amp;#34;/&amp;#34; 1*DIGIT &amp;#34;.&amp;#34; 1*DIGIT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;uniform-resource-identifiers&#34;&gt;Uniform Resource Identifiers&lt;/h4&gt;
&lt;p&gt;Uniform Resource Identifiers (URI) are simply formatted, case-insensitive string containing name, location, etc. to identify a resource, for example, a website, a web service, etc.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;URI = &amp;#34;http:&amp;#34; &amp;#34;//&amp;#34; host [ &amp;#34;:&amp;#34; port ] [ abs_path [ &amp;#34;?&amp;#34; query ]]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&amp;ldquo;http&amp;rdquo; scheme is used to locate network resources through the HTTP protocol.&lt;/li&gt;
&lt;li&gt;Here if the port is empty or not given, port 80 is assumed for HTTP and an empty abs path is equivalent to an abs_path of &amp;ldquo;/&amp;rdquo;. The characters other than those in the reserved and unsafe sets are equivalent to their &amp;ldquo;&amp;rdquo;%&amp;quot; HEX HEX&amp;quot; encoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://abc.com:80/~smith/home.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://ABC.com/%7Esmith/home.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://ABC.com:/%7esmith/home.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;date-or-time-formats&#34;&gt;Date or Time Formats&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;All HTTP date/time stamps MUST be represented in Greenwich Mean Time (GMT), without exception.&lt;/li&gt;
&lt;li&gt;HTTP applications are allowed to use any of the following three representations of date/time stamps:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sun Nov  6 08:49:37 1994       ; ANSI C&amp;#39;s asctime() format
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;character-sets&#34;&gt;Character Sets&lt;/h4&gt;
&lt;p&gt;We use character sets to specify the character sets that the client prefers. Multiple character sets can be listed separated by commas. If a value is not specified, the default is the US-ASCII&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;Following are the valid character sets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;US-ASCII
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ISO-8859-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ISO-8859-7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;content-encodings&#34;&gt;Content Encodings&lt;/h4&gt;
&lt;p&gt;A content encoding value indicates that an encoding algorithm has been used to encode the content before passing it over the network. Content coding are primarily used to allow a document to be compressed or otherwise usefully transformed without losing the identity.&lt;/p&gt;
&lt;p&gt;All content-coding values are case-insensitive. HTTP/1.1 uses content-coding values in the Accept-Encoding and Content-Encoding header fields which we will see in the subsequent chapters.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;Following are the valid encoding schemes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-encoding: compress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-encoding: deflate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;media-types&#34;&gt;Media Types&lt;/h4&gt;
&lt;p&gt;HTTP uses Internet Media Types in the Content-Type and Accept header fields in order to provide open and extensible data typing and type negotiation. All the Media-type values are registered with the Internet Assigned Number Authority (IANA).&lt;/p&gt;
&lt;p&gt;The general syntax to specify media type is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;media-type     = type &amp;#34;/&amp;#34; subtype *( &amp;#34;;&amp;#34; parameter )
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The type, subtype, and parameter attribute names are case&amp;ndash;insensitive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept: image/gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;language-tags&#34;&gt;Language Tags&lt;/h4&gt;
&lt;p&gt;HTTP uses language tags within the Accept-Language and Content-Language fields. A language tag is composed of one or more parts: a primary language tag and a possibly empty series of subtags:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;language-tag  = primary-tag *( &amp;#34;-&amp;#34; subtag )
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;White spaces are not allowed within the tag and all tags are case- insensitive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;en, en-US, en-cockney, i-cherokee, x-pig-latin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;working-of-web&#34;&gt;Working of Web&lt;/h2&gt;
&lt;p&gt;The browser sends an HTTP request message to the server, asking it to send a copy of the website to the client and server send back HTTP response message to browser.&lt;/p&gt;
&lt;p&gt;This message, and all other data sent between the client and the server, is sent across your internet connection using TCP/IP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/working-of-web.png&#34; alt=&#34;image working-of-web&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;http-messages&#34;&gt;HTTP Messages&lt;/h2&gt;
&lt;p&gt;HTTP Message is used to show how data is exchanged between the client and the server. It is based on client-server architecture. An HTTP client is a program that establishes a connection to a server to send one or more HTTP request messages. An HTTP server is a program that accepts connections to serve HTTP requests by sending an HTTP response messages.&lt;/p&gt;
&lt;p&gt;The HTTP Messages can be classified as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#media-types&#34;&gt;&lt;strong&gt;Message Type&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-headers&#34;&gt;&lt;strong&gt;Message Headers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-body&#34;&gt;&lt;strong&gt;Message Body&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-length&#34;&gt;&lt;strong&gt;Message Length&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#general-header-fields&#34;&gt;&lt;strong&gt;General Header Fields&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;message-type&#34;&gt;Message Type&lt;/h4&gt;
&lt;p&gt;HTTP message consists of an initial request line and an initial response line.&lt;/p&gt;
&lt;p&gt;Format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP-message = Request | Response ; HTTP/1.1 messages  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Initial Request Line&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The initial line is different for the request and for the response. A request-line consists of three parts: a method name, requested resource&amp;rsquo;s local path, and the HTTP version being used. All these parts are separated by spaces.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /path/to/file/index.html HTTP/1.0 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;GET is the most common HTTP method.&lt;/li&gt;
&lt;li&gt;The path shows the part of the URL after the host name. It is also called a request URI.&lt;/li&gt;
&lt;li&gt;The version of HTTP always takes the form “HTTP/x.x”, uppercase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/http-message1.png&#34; alt=&#34;image request&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Initial Response Line&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The initial Response line is also known as the status line. It also has three parts: the HTTP version, a response status code that gives the result of the request, and the English reason phrase describing the status code.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.0 200 OK  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.0 404 Not Found
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-http/http-message2.png&#34; alt=&#34;image request&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;message-headers&#34;&gt;Message Headers&lt;/h4&gt;
&lt;p&gt;The Message header provides information about the request and response. It also provides information about the object which is sent in the message body. Message Headers are of four types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;General Header&lt;/strong&gt;: It has general applicability for both request messages and response messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Request Header&lt;/strong&gt;: It has applicability only for the request messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Response Header&lt;/strong&gt;: It has applicability only for the response messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entity Header&lt;/strong&gt;: It defines meta-information about the entity-body, and about the resource identified by request.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the above headers follow the same generic format. Each of the header fields consists of a name followed by a colon and the field values as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;message-header = field-name &amp;#34;:&amp;#34; [ field-value ]  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;message-body&#34;&gt;Message Body&lt;/h4&gt;
&lt;p&gt;The message body of an HTTP message is used to carry the entire body associated with the request and response. The message-body differs from the entire-body only when a transfer-coding has been applied, as indicated by the Transfer-Encoding header field.&lt;/p&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;message-body = entity-body  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        | &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;entity-body&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encoded&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;per&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Transfer-Encoding&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Transfer-Encoding MUST be used to indicate any transfer-codings which is applied by an application to ensure safe and proper transfer of the message. Transfer-Encoding is a property of the message.&lt;/p&gt;
&lt;h4 id=&#34;message-length&#34;&gt;Message Length&lt;/h4&gt;
&lt;p&gt;The transfer-length of a message is the length of the message-body, and it appears in the message.&lt;/p&gt;
&lt;p&gt;In a message, when a message body is allowed, and Content-Length is given, its field value MUST exactly match the number of OCTETs in the message-body. When an invalid length is received and detected, the HTTP/1.1 user agents MUST notify the user.&lt;/p&gt;
&lt;h4 id=&#34;general-header-fields&#34;&gt;General Header Fields&lt;/h4&gt;
&lt;p&gt;Some header fields have the applicability for both the request and response messages. These header fields apply only when the message is transmitted.&lt;/p&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;general-header = Cache-Control 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-request&#34;&gt;HTTP Request&lt;/h2&gt;
&lt;p&gt;An HTTP client sends an HTTP request to a server in the form of a request message which includes following format:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A Request Line&lt;/li&gt;
&lt;li&gt;Zero or more header(General,Request,Entity) fields followed by CRLF&lt;/li&gt;
&lt;li&gt;An empty line (i.e., a line with nothing preceding the CRLF) indicating the end of the header fields&lt;/li&gt;
&lt;li&gt;Optionally a message-body&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Request  = Request-Line                
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        *(( general-header        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        | request-header           
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        | entity-header ) CRLF)    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        CRLF  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [ message-body ] 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#request-line&#34;&gt;&lt;strong&gt;Request Line&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#request-method&#34;&gt;&lt;strong&gt;Request Method&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#request-uri&#34;&gt;&lt;strong&gt;Request-URI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#request-header-fields&#34;&gt;&lt;strong&gt;Request Header Fields&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-request-examples&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;request-line&#34;&gt;Request Line&lt;/h4&gt;
&lt;p&gt;The Request-Line starts with a method token, which is followed by the Request-URI, the protocol version, and ending with CRLF. Using the SP characters, the elements are separated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Request-Line   = Method SP Request-URI SP HTTP-Version CRLF 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;request-method&#34;&gt;Request Method&lt;/h4&gt;
&lt;p&gt;The request method indicates the method to be performed on the resource identified by the given Request-URI. The method is case-sensitive and should always be mentioned in uppercase. The following table lists all the supported methods in HTTP/1.1.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Sl No&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Method&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;The GET method is used to retrieve information from the given server using a given URI. Requests using GET should only retrieve data and should have no other effect on the data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;HEAD&lt;/td&gt;
&lt;td&gt;Same as GET, but it transfers the status line and the header section only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;A POST request is used to send data to the server, for example, customer information, file upload, etc. using HTML forms.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;Replaces all the current representations of the target resource with the uploaded content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;Removes all the current representations of the target resource given by URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;CONNECT&lt;/td&gt;
&lt;td&gt;Establishes a tunnel to the server identified by a given URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;OPTIONS&lt;/td&gt;
&lt;td&gt;Describe the communication options for the target resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;TRACE&lt;/td&gt;
&lt;td&gt;Performs a message loop back test along with the path to the target resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;request-uri&#34;&gt;Request URI&lt;/h4&gt;
&lt;p&gt;The Request-URI is a &lt;strong&gt;Uniform Resource Identifier&lt;/strong&gt; and identifies the resource upon which to apply the request. Following are the most commonly used forms to specify an URI:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Request-URI = &amp;#34;*&amp;#34; | absoluteURI | abs_path | authority
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Method&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;asterisk &amp;ldquo;*&amp;rdquo;&lt;/td&gt;
&lt;td&gt;The asterisk star is used to show that the request does not apply to a particular resource, but it will apply to the server itself. It is allowed only when the method used does not necessarily apply to a resource. Example: OPTIONS * HTTP/1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;absoluteURI&lt;/td&gt;
&lt;td&gt;The absoluteURI form is used only when the request is being made to a proxy. The requested proxy is used to forward the request and return the response. Example : GET &lt;a href=&#34;http://swayaan.com/&#34;&gt;http://swayaan.com/&lt;/a&gt; HTTP/1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;absolute path&lt;/td&gt;
&lt;td&gt;The absolute path can&amp;rsquo;t be empty. If in the original URI, none is present, it must be given as &amp;ldquo;/&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authority&lt;/td&gt;
&lt;td&gt;The authority form is only used by the CONNECT method.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;request-header-fields&#34;&gt;Request Header Fields&lt;/h4&gt;
&lt;p&gt;This request-header field allows the client to pass additional information to the server, including the request and the client.The request header fields function as request modifiers, with semantics similar to the parameters of a method invocation in a programming language.&lt;/p&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;request-header = Accept                     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Accept-Charset            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Accept-Encoding            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Accept-Language            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Authorization              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Expect                    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | From                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Host                      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | If-Match                   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | If-Modified-Since        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | If-None-Match             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | If-Range                
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | If-Unmodified-Since       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Max-Forwards              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Proxy-Authorization       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Range                     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | Referer                   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | TE                        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      | User-Agent  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;http-request-examples&#34;&gt;HTTP Request Examples&lt;/h4&gt;
&lt;p&gt;Now let&amp;rsquo;s put it all together to form an HTTP request to fetch hello.htm page from the web&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-responses&#34;&gt;HTTP Responses&lt;/h2&gt;
&lt;p&gt;After receiving and interpreting a request message, a server responds with an HTTP response message&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A Status-line&lt;/li&gt;
&lt;li&gt;Zero or more header (General,Response,Entity) fields followed by CRLF&lt;/li&gt;
&lt;li&gt;An empty line (i.e., a line with nothing preceding the CRLF) indicating the end of the header fields&lt;/li&gt;
&lt;li&gt;Optionally a message-body&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;An HTTP response contains the following things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#message-status-line&#34;&gt;&lt;strong&gt;Status Line&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#response-header-fields&#34;&gt;&lt;strong&gt;Response Header Fields or a series of HTTP headers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-response-examples&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;message-status-line&#34;&gt;Message Status-Line&lt;/h4&gt;
&lt;p&gt;A Status-Line consists of the protocol version followed by a numeric status code and its associated textual phrase. The elements are separated by space SP characters.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;HTTP Version&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A server supporting HTTP version 1.1 will return the following version information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP-Version = HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Status Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Status-Code element is a 3-digit integer where first digit of the Status-Code defines the class of response and the last two digits do not have any categorization role. There are 5 values for the first digit:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Sl No&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Code&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1xx: Informational&lt;/td&gt;
&lt;td&gt;It means the request was received and the process is continuing.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2xx: Success&lt;/td&gt;
&lt;td&gt;It means the action was successfully received, understood, and accepted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3xx: Redirection&lt;/td&gt;
&lt;td&gt;It means further action must be taken in order to complete the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4xx: Client Error&lt;/td&gt;
&lt;td&gt;It means the request contains incorrect syntax or cannot be fulfilled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;5xx: Server Error&lt;/td&gt;
&lt;td&gt;It means the server failed to fulfill an apparently valid request.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;response-header-fields&#34;&gt;Response Header Fields&lt;/h4&gt;
&lt;p&gt;The HTTP Headers for the response of the server contain the information that a client can use to find out more about the response, and about the server that sent it. This information is used to assist the client with displaying the response to a user, with storing the response for the use of future, and with making further requests to the server now or in the future.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response-header = Accept-Ranges            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Age                     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | ETag                     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Location                
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Proxy-Authenticate       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Retry-After              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Server             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | Vary                    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  | WWW-Authenticate     
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;http-response-examples&#34;&gt;HTTP Response Examples&lt;/h4&gt;
&lt;p&gt;Now let&amp;rsquo;s put it all together to form an HTTP response for a request to fetch the hello.htm page from the web server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello, World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following example shows an HTTP response message displaying error condition when the web server could not find the requested page&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 404 Not Found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Sun, 18 Oct 2012 10:36:20 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 230
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html; charset=iso-8859-1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//IETF//DTD HTML 2.0//EN&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;404 Not Found&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Not Found&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;The requested URL /t.html was not found on this server.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-methods&#34;&gt;HTTP Methods&lt;/h2&gt;
&lt;p&gt;For HTTP/1.1, the set of common methods are defined below. This set can be expanded based on the requirements. The name of these methods is case sensitive, and they must be used in uppercase.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Method&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#get-method&#34;&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The GET method is used to retrieve information from the given server using a given URI. Requests using GET should only retrieve data and should have no other effect on the data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#head-method&#34;&gt;&lt;strong&gt;HEAD&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Same as GET, but it transfers the status line and the header section only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#post-method&#34;&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A POST request is used to send data to the server, for example, customer information, file upload, etc. using HTML forms.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#put-method&#34;&gt;&lt;strong&gt;PUT&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Replaces all the current representations of the target resource with the uploaded content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#delete-method&#34;&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Removes all the current representations of the target resource given by URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#connect-method&#34;&gt;&lt;strong&gt;CONNECT&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Establishes a tunnel to the server identified by a given URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#options-method&#34;&gt;&lt;strong&gt;OPTIONS&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Describe the communication options for the target resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#trace-method&#34;&gt;&lt;strong&gt;TRACE&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Performs a message loop back test along with the path to the target resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;get-method&#34;&gt;GET Method&lt;/h4&gt;
&lt;p&gt;A GET request retrieves data from a web server by specifying parameters in the URL portion of the request. This is the main method used for document retrieval. The following example makes use of GET method to fetch hello.htm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server response against the above GET request will be as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: &amp;#34;34aa387-d-1568eb00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Vary: Authorization,Accept
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges: bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello, World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;head-method&#34;&gt;HEAD Method&lt;/h4&gt;
&lt;p&gt;The HEAD method is functionally similar to GET, except that the server replies with a response line and headers, but no entity-body. The following example makes use of HEAD method to fetch header information about hello.htm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HEAD /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server response against the above HEAD request will be as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: &amp;#34;34aa387-d-1568eb00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Vary: Authorization,Accept
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges: bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can notice that here server the does not send any data after header.&lt;/p&gt;
&lt;h4 id=&#34;post-method&#34;&gt;POST Method&lt;/h4&gt;
&lt;p&gt;The POST method is used when you want to send some data to the server, for example, file update, form data, etc. The following example makes use of POST method to send a form data to the server, which will be processed by a process.cgi and finally a response will be returned:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST /cgi-bin/process.cgi HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/xml; charset=utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://clearforest.com/&amp;#34;&lt;/span&gt;&amp;gt;string&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;string&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server side script process.cgi processes the passed data and sends the following response:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: &amp;#34;34aa387-d-1568eb00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Vary: Authorization,Accept
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges: bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Request Processed Successfully&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;put-method&#34;&gt;PUT Method&lt;/h4&gt;
&lt;p&gt;The PUT method is used to request the server to store the included entity-body at a location specified by the given URL. The following example requests the server to save the given entity-body in hello.htm at the root of the server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PUT /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 182
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello, World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server will store the given entity-body in hello.htm file and will send the following response back to the client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 201 Created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-length: 30
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;The file was created.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;delete-method&#34;&gt;DELETE Method&lt;/h4&gt;
&lt;p&gt;The DELETE method is used to request the server to delete a file at a location specified by the given URL. The following example requests the server to delete the given file hello.htm at the root of the server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DELETE /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server will delete the mentioned file hello.htm and will send the following response back to the client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-length: 30
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;URL deleted.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;connect-method&#34;&gt;CONNECT Method&lt;/h4&gt;
&lt;p&gt;The CONNECT method is used by the client to establish a network connection to a web server over HTTP. The following example requests a connection with a web server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONNECT www.tutorialspoint.com HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The connection is established with the server and the following response is sent back to the client:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 Connection established
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;options-method&#34;&gt;OPTIONS Method&lt;/h4&gt;
&lt;p&gt;The OPTIONS method is used by the client to find out the HTTP methods and other options supported by a web server. The client can specify a URL for the OPTIONS method, or an asterisk (*) to refer to the entire server. The following example requests a list of methods supported by a web server running on tutorialspoint.com:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTIONS * HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server will send an information based on the current configuration of the server, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Allow: GET,HEAD,POST,OPTIONS,TRACE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: httpd/unix-directory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;trace-method&#34;&gt;TRACE Method&lt;/h4&gt;
&lt;p&gt;The TRACE method is used to echo the contents of an HTTP Request back to the requester which can be used for debugging purpose at the time of development. The following example shows the usage of TRACE method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TRACE / HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The server will send the following message in response to the above request:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: message/http
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 39
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TRACE / HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-status-codes&#34;&gt;HTTP Status Codes&lt;/h2&gt;
&lt;p&gt;The Status-Code element in a server response, is a 3-digit integer where the first digit of the Status-Code defines the class of response and the last two digits do not have any categorization role. There are 5 values for the first digit&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Code&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#1xx-information&#34;&gt;&lt;strong&gt;1xx: Informational&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It means the request has been received and the process is continuing.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#2xx-success&#34;&gt;&lt;strong&gt;2xx: Success&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It means the action was successfully received, understood, and accepted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#3xx-redirection&#34;&gt;&lt;strong&gt;3xx: Redirection&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It means further action must be taken in order to complete the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#4xx-client-error&#34;&gt;&lt;strong&gt;4xx: Client Error&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It means the request contains incorrect syntax or cannot be fulfilled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#5xx-server-error&#34;&gt;&lt;strong&gt;5xx: Server Error&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It means the server failed to fulfill an apparently valid request.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;1xx-information&#34;&gt;1xx Information&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Message&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100 Continue&lt;/td&gt;
&lt;td&gt;Only a part of the request has been received by the server, but as long as it has not been rejected, the client should continue with the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101 Switching Protocols&lt;/td&gt;
&lt;td&gt;The server switches protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;2xx-success&#34;&gt;2xx Success&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Message&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200 OK&lt;/td&gt;
&lt;td&gt;The request is OK.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;201 Created&lt;/td&gt;
&lt;td&gt;The request is complete, and a new resource is created .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;202 Accepted&lt;/td&gt;
&lt;td&gt;The request is accepted for processing, but the processing is not complete.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;203 Non-authoritative Information&lt;/td&gt;
&lt;td&gt;The information in the entity header is from a local or third-party copy, not from the original server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;204 No Content&lt;/td&gt;
&lt;td&gt;A status code and a header are given in the response, but there is no entity-body in the reply.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;205 Reset Content&lt;/td&gt;
&lt;td&gt;The browser should clear the form used for this transaction for additional input.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;206 Partial Content&lt;/td&gt;
&lt;td&gt;The server is returning partial data of the size requested. Used in response to a request specifying a Range header. The server must specify the range included in the response with the Content-Range header.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;3xx-redirection&#34;&gt;3xx Redirection&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Message&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;300 Multiple Choices&lt;/td&gt;
&lt;td&gt;A link list. The user can select a link and go to that location. Maximum five addresses  .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;301 Moved Permanently&lt;/td&gt;
&lt;td&gt;The requested page has moved to a new url .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;302 Found&lt;/td&gt;
&lt;td&gt;The requested page has moved temporarily to a new url .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;303 See Other&lt;/td&gt;
&lt;td&gt;The requested page can be found under a different url .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;304 Not Modified&lt;/td&gt;
&lt;td&gt;This is the response code to an If-Modified-Since or If-None-Match header, where the URL has not been modified since the specified date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;305 Use Proxy&lt;/td&gt;
&lt;td&gt;The requested URL must be accessed through the proxy mentioned in the Location header.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;306 Unused&lt;/td&gt;
&lt;td&gt;This code was used in a previous version. It is no longer used, but the code is reserved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;307 Temporary Redirect&lt;/td&gt;
&lt;td&gt;The requested page has moved temporarily to a new url.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;4xx-client-error&#34;&gt;4xx Client Error&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Message&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;400 Bad Request&lt;/td&gt;
&lt;td&gt;The server did not understand the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;401 Unauthorized&lt;/td&gt;
&lt;td&gt;The requested page needs a username and a password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;402 Payment Required&lt;/td&gt;
&lt;td&gt;You can not use this code yet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;td&gt;Access is forbidden to the requested page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;404 Not Found&lt;/td&gt;
&lt;td&gt;The server can not find the requested page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;405 Method Not Allowed&lt;/td&gt;
&lt;td&gt;The method specified in the request is not allowed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;406 Not Acceptable&lt;/td&gt;
&lt;td&gt;The server can only generate a response that is not accepted by the client.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;407 Proxy Authentication Required&lt;/td&gt;
&lt;td&gt;You must authenticate with a proxy server before this request can be served.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;408 Request Timeout&lt;/td&gt;
&lt;td&gt;The request took longer than the server was prepared to wait.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;409 Conflict&lt;/td&gt;
&lt;td&gt;The request could not be completed because of a conflict.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;410 Gone&lt;/td&gt;
&lt;td&gt;The requested page is no longer available .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;411 Length Required&lt;/td&gt;
&lt;td&gt;The &amp;ldquo;Content-Length&amp;rdquo; is not defined. The server will not accept the request without it .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;412 Precondition Failed&lt;/td&gt;
&lt;td&gt;The pre condition given in the request evaluated to false by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;413 Request Entity Too Large&lt;/td&gt;
&lt;td&gt;The server will not accept the request, because the request entity is too large.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;414 Request-url Too Long&lt;/td&gt;
&lt;td&gt;The server will not accept the request, because the url is too long. Occurs when you convert a &amp;ldquo;post&amp;rdquo; request to a &amp;ldquo;get&amp;rdquo; request with a long query information .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;415 Unsupported Media Type&lt;/td&gt;
&lt;td&gt;The server will not accept the request, because the mediatype is not supported .&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;416 Requested Range Not Satisfiable&lt;/td&gt;
&lt;td&gt;The requested byte range is not available and is out of bounds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;417 Expectation Failed&lt;/td&gt;
&lt;td&gt;The expectation given in an Expect request-header field could not be met by this server.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;5xx-server-error&#34;&gt;5xx Server Error&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Message&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;500 Internal Server Error&lt;/td&gt;
&lt;td&gt;The request was not completed. The server met an unexpected condition.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;501 Not Implemented&lt;/td&gt;
&lt;td&gt;The request was not completed. The server did not support the functionality required.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;502 Bad Gateway&lt;/td&gt;
&lt;td&gt;The request was not completed. The server received an invalid response from the upstream server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;503 Service Unavailable&lt;/td&gt;
&lt;td&gt;The request was not completed. The server is temporarily overloading or down.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;504 Gateway Timeout&lt;/td&gt;
&lt;td&gt;The gateway has timed out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;505 HTTP Version Not Supported&lt;/td&gt;
&lt;td&gt;The server does not support the &amp;ldquo;http protocol&amp;rdquo; version.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;http-header-fields&#34;&gt;HTTP Header Fields&lt;/h2&gt;
&lt;p&gt;HTTP header fields provide required information about the request or response, or about the object sent in the message body. There are four types of HTTP message headers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#general-headers&#34;&gt;&lt;strong&gt;General-header&lt;/strong&gt;&lt;/a&gt;: These header fields have general applicability for both request and response messages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client-request-header&#34;&gt;&lt;strong&gt;Client Request-header&lt;/strong&gt;&lt;/a&gt;: These header fields have applicability only for request messages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#server-response-headers&#34;&gt;&lt;strong&gt;Server Response-header&lt;/strong&gt;&lt;/a&gt;: These header fields have applicability only for response messages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#entity-headers&#34;&gt;&lt;strong&gt;Entity-header&lt;/strong&gt;&lt;/a&gt;: These header fields define meta information about the entity-body or, if no body is present, about the resource identified by the request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;general-headers&#34;&gt;General Headers&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Cache-Control general-header field is used to specify directives that MUST be obeyed by all the caching system. The syntax is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cache-Control : cache-request-directive|cache-response-directive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An HTTP client or server can use the Cache-control general header to specify parameters for the cache or to request certain kinds of documents from the cache. The caching directives are specified in a comma-separated list. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cache-control: no-cache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following table lists the important cache request directives that can be used by the client in its HTTP request&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Cache Request Directive&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;A cache must not use the response to satisfy a subsequent request without successful revalidation with the origin server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;The cache should not store anything about the client request or server response.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-stale [ = seconds ]&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response that has exceeded its expiration time. If seconds are given, it must not be expired by more than that time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min-fresh = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose freshness lifetime is not less than its current age plus the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;Does not convert the entity-body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;only-if-cached&lt;/td&gt;
&lt;td&gt;Does not retrieve new data. The cache can send a document only if it is in the cache, and should not contact the origin-server to see if a newer copy exists.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following important cache response directives that can be used by the server in its HTTP response&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Cache Response Directive&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;Indicates that the response may be cached by any cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;Indicates that all or part of the response message is intended for a single user and must not be cached by a shared cache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;A cache must not use the response to satisfy a subsequent request without successful re-validation with the origin server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;The cache should not store anything about the client request or server response.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;Does not convert the entity-body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;must-revalidate&lt;/td&gt;
&lt;td&gt;The cache must verify the status of the stale documents before using it and expired ones should not be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy-revalidate&lt;/td&gt;
&lt;td&gt;The proxy-revalidate directive has the same meaning as the must- revalidate directive, except that it does not apply to non-shared user agent caches.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s-maxage = seconds&lt;/td&gt;
&lt;td&gt;The maximum age specified by this directive overrides the maximum age specified by either the max-age directive or the Expires header. The s-maxage directive is always ignored by a private cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Connection general-header field allows the sender to specify options that are desired for that particular connection and must not be communicated by proxies over further connections. Following is the simple syntax for using connection header:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection : &amp;#34;Connection&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;HTTP/1.1 defines the &amp;ldquo;close&amp;rdquo; connection option for the sender to signal that the connection will be closed after completion of the response. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default, HTTP 1.1 uses persistent connections, where the connection does not automatically close after a transaction. HTTP 1.0, on the other hand, does not have persistent connections by default. If a 1.0 client wishes to use persistent connections, it uses the keep-alive parameter as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: keep-alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All HTTP date/time stamps MUST be represented in Greenwich Mean Time (GMT), without exception. HTTP applications are allowed to use any of the following three representations of date/time stamps:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sun Nov  6 08:49:37 1994       ; ANSI C&amp;#39;s asctime() format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here the first format is the most preferred one.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Pragma&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Pragma general-header field is used to include implementation specific directives that might apply to any recipient along the request/response chain. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pragma: no-cache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only directive defined in HTTP/1.0 is the no-cache directive and is maintained in HTTP 1.1 for backward compatibility. No new Pragma directives will be defined in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Trailer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Trailer general field value indicates that the given set of header fields is present in the trailer of a message encoded with chunked transfer-coding. Following is the syntax of Trailer header field:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Trailer : field-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Message header fields listed in the Trailer header field must not include the following header fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transfer-Encoding&lt;/li&gt;
&lt;li&gt;Content-Length&lt;/li&gt;
&lt;li&gt;Trailer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Transfer-Encoding&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Transfer-Encoding general-header field indicates what type of transformation has been applied to the message body in order to safely transfer it between the sender and the recipient. This is not the same as content-encoding because transfer-encodings are a property of the message, not of the entity-body. The syntax of Transfer-Encoding header field is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Transfer-Encoding: chunked
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;All transfer-coding values are case-insensitive.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Upgrade&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Upgrade general-header allows the client to specify what additional communication protocols it supports and would like to use if the server finds it appropriate to switch protocols. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Upgrade header field is intended to provide a simple mechanism for transition from HTTP/1.1 to some other, incompatible protocol.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Via general-header must be used by gateways and proxies to indicate the intermediate protocols and recipients. For example, a request message could be sent from an HTTP/1.0 user agent to an internal proxy code-named &amp;ldquo;fred&amp;rdquo;, which uses HTTP/1.1 to forward the request to a public proxy at nowhere.com, which completes the request by forwarding it to the origin server at &lt;a href=&#34;https://www.ics.uci.edu&#34;&gt;www.ics.uci.edu&lt;/a&gt;. The request received by &lt;a href=&#34;https://www.ics.uci.edu&#34;&gt;www.ics.uci.edu&lt;/a&gt; would then have the following Via header field:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Upgrade header field is intended to provide a simple mechanism for transition from HTTP/1.1 to some other, incompatible protocol.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Warning general-header is used to carry additional information about the status or transformation of a message which might not be reflected in the message. A response may carry more than one Warning header.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Warning : warn-code SP warn-agent SP warn-text SP warn-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;client-request-header&#34;&gt;Client Request-header&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accept&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Accept request-header field can be used to specify certain media types which are acceptable for the response. The general syntax is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept: type/subtype [q=qvalue]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple media types can be listed separated by commas and the optional qvalue represents an acceptable quality level for accept types on a scale of 0 to 1. Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept: text/plain; q=0.5, text/html, text/x-dvi; q=0.8, text/x-c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This would be interpreted as text/html and text/x-c and are the preferred media types, but if they do not exist, then send the text/x-dvi entity, and if that does not exist, send the text/plain entity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accept-Charset&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Accept-Charset request-header field can be used to indicate what character sets are acceptable for the response. Following is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Charset: character_set [q=qvalue]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple character sets can be listed separated by commas and the optional qvalue represents an acceptable quality level for nonpreferred character sets on a scale of 0 to 1. Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Charset: iso-8859-5, unicode-1-1; q=0.8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The special value &amp;ldquo;*&amp;rdquo;, if present in the Accept-Charset field, matches every character set and if no Accept-Charset header is present, the default is that any character set is acceptable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accept-Encoding&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Accept-Encoding request-header field is similar to Accept, but restricts the content-codings that are acceptable in the response. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: encoding types
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Examples are as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: compress, gzip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: compress;q=0.5, gzip;q=1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accept-Language&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Accept-Language request-header field is similar to Accept, but restricts the set of natural languages that are preferred as a response to the request. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: language [q=qvalue]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple languages can be listed separated by commas and the optional qvalue represents an acceptable quality level for non preferred languages on a scale of 0 to 1. Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: da, en-gb;q=0.8, en;q=0.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Authorization request-header field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Authorization : credentials
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The HTTP/1.0 specification defines the BASIC authorization scheme, where the authorization parameter is the string of username:password encoded in base 64. Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Authorization: BASIC Z3Vlc3Q6Z3Vlc3QxMjM=
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The value decodes into is guest:guest123 where guest is user ID and guest123 is the password.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cookie&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Cookie request-header field value contains a name/value pair of information stored for that URL. Following is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cookie: name=value
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple cookies can be specified separated by semicolons as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cookie: name1=value1;name2=value2;name3=value3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Expect&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Expect request-header field is used to indicate that a particular set of server behaviors is required by the client. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Expect : 100-continue | expectation-extension
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If a server receives a request containing an Expect field that includes an expectation-extension that it does not support, it must respond with a 417 (Expectation Failed) status.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;From&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The From request-header field contains an Internet e-mail address for the human user who controls the requesting user agent. Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: webmaster@w3.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This header field may be used for logging purposes and as a means for identifying the source of invalid or unwanted requests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Host request-header field is used to specify the Internet host and the port number of the resource being requested. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host : &amp;#34;Host&amp;#34; &amp;#34;:&amp;#34; host [ &amp;#34;:&amp;#34; port ] ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A host without any trailing port information implies the default port, which is 80. For example, a request on the origin server for &lt;a href=&#34;http://www.w3.org/pub/WWW/&#34;&gt;http://www.w3.org/pub/WWW/&lt;/a&gt; would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /pub/WWW/ HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.w3.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If-Match&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The If-Match request-header field is used with a method to make it conditional. This header requests the server to perform the requested method only if the given value in this tag matches the given entity tags represented by ETag. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Match : entity-tag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An asterisk (*) matches any entity, and the transaction continues only if the entity exists. Following are possible examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Match: &amp;#34;xyzzy&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Match: &amp;#34;xyzzy&amp;#34;, &amp;#34;r2d2xxxx&amp;#34;, &amp;#34;c3piozzzz&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Match: *
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If none of the entity tags match, or if &amp;ldquo;*&amp;rdquo; is given and no current entity exists, the server must not perform the requested method, and must return a 412 (Precondition Failed) response.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If-Modified-Since&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The If-Modified-Since request-header field is used with a method to make it conditional. If the requested URL has not been modified since the time specified in this field, an entity will not be returned from the server; instead, a 304 (not modified) response will be returned without any message-body. The general syntax of if-modified-since is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Modified-Since : HTTP-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An example of the field is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If none of the entity tags match, or if &amp;ldquo;*&amp;rdquo; is given and no current entity exists, the server must not perform the requested method, and must return a 412 (Precondition Failed) response.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If-None-Match&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The If-None-Match request-header field is used with a method to make it conditional. This header requests the server to perform the requested method only if one of the given value in this tag matches the given entity tags represented by ETag. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-None-Match : entity-tag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An asterisk (*) matches any entity, and the transaction continues only if the entity does not exist. Following are the possible examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-None-Match: &amp;#34;xyzzy&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-None-Match: &amp;#34;xyzzy&amp;#34;, &amp;#34;r2d2xxxx&amp;#34;, &amp;#34;c3piozzzz&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-None-Match: *
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If-Range&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The If-Range request-header field can be used with a conditional GET to request only the portion of the entity that is missing, if it has not been changed, and the entire entity if it has been changed. The general syntax is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Range : entity-tag | HTTP-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Either an entity tag or a date can be used to identify the partial entity already received. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Range: Sat, 29 Oct 1994 19:43:31 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here if the document has not been modified since the given date, the server returns the byte range given by the Range header, otherwise it returns all of the new document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If-Unmodified-Since&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The If-Unmodified-Since request-header field is used with a method to make it conditional. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Unmodified-Since : HTTP-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the requested resource has not been modified since the time specified in this field, the server should perform the requested operation as if the If-Unmodified-Since header were not present. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the request results in anything other than a 2xx or 412 status, the If-Unmodified-Since header should be ignored.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Max-Forwards&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Max-Forwards request-header field provides a mechanism with the TRACE and OPTIONS methods to limit the number of proxies or gateways that can forward the request to the next inbound server. Here is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards : n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Max-Forwards value is a decimal integer indicating the remaining number of times this request message may be forwarded. This is useful for debugging with the TRACE method, avoiding infinite loops. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards : 5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Max-Forwards header field may be ignored for all other methods defined in the HTTP specification.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Proxy-Authorization&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Proxy-Authorization request-header field allows the client to identify itself (or its user) to a proxy which requires authentication. Here is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Proxy-Authorization : credentials
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Proxy-Authorization field value consists of credentials containing the authentication information of the user agent for the proxy and/or realm of the resource being requested.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Range&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Range request-header field specifies the partial range(s) of the content requested from the document. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Range: bytes-unit=first-byte-pos &amp;#34;-&amp;#34; [last-byte-pos]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first-byte-pos value in a byte-range-spec gives the byte-offset of the first byte in a range. The last-byte-pos value gives the byte-offset of the last byte in the range; that is, the byte positions specified are inclusive. You can specify a byte-unit as bytes. Byte offsets start at zero. Some simple examples are as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The first 500 bytes 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Range: bytes=0-499
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The second 500 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Range: bytes=500-999
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The final 500 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Range: bytes=-500
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The first and last bytes only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Range: bytes=0-0,-1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple ranges can be listed, separated by commas. If the first digit in the comma-separated byte range(s) is missing, the range is assumed to count from the end of the document. If the second digit is missing, the range is byte n to the end of the document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Referer&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Referer request-header field allows the client to specify the address (URI) of the resource from which the URL has been requested. The general syntax is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Referer : absoluteURI | relativeURI
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Referer: http://www.tutorialspoint.org/http/index.htm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the field value is a relative URI, it should be interpreted relative to the Request-URI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The TE request-header field indicates what extension transfer-coding it is willing to accept in the response and whether or not it is willing to accept trailer fields in a chunked transfer-coding. Following is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TE   : t-codings
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The presence of the keyword &amp;ldquo;trailers&amp;rdquo; indicates that the client is willing to accept trailer fields in a chunked transfer-coding and it is specified either of the ways:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TE: deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TE:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TE: trailers, deflate;q=0.5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the TE field-value is empty or if no TE field is present, then only transfer-coding is chunked. A message with no transfer-coding is always acceptable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User-Agent&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The User-Agent request-header field contains information about the user agent originating the request. Following is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent : product | comment
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;server-response-headers&#34;&gt;Server Response Headers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accept-Ranges&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Accept-Ranges response-header field allows the server to indicate its acceptance of range requests for a resource. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges  : range-unit | none
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example a server that accepts byte-range requests may send:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges: bytes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Servers that do not accept any kind of range request for a resource may send:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Ranges: none
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will advise the client not to attempt a range request.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Age&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Age response-header field conveys the sender&amp;rsquo;s estimate of the amount of time since the response (or its revalidation) was generated at the origin server. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Age : delta-seconds
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Age values are non-negative decimal integers, representing time in seconds. Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Age: 1030
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An HTTP/1.1 server that includes a cache must include an Age header field in every response generated from its own cache.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ETag&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ETag response-header field provides the current value of the entity tag for the requested variant. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag :  entity-tag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here are some simple examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: &amp;#34;xyzzy&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: W/&amp;#34;xyzzy&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ETag: &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Location : absoluteURI
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Location: http://www.tutorialspoint.org/http/index.htm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Content-Location header field differs from Location in that the Content-Location identifies the original location of the entity enclosed in the request.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Proxy-Authenticate&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Proxy-Authenticate response-header field must be included as a part of a 407 (Proxy Authentication Required) response. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Proxy-Authenticate  : challenge
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Retry-After&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Retry-After response-header field can be used with a 503 (Service Unavailable) response to indicate how long the service is expected to be unavailable to the requesting client. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retry-After : HTTP-date | delta-seconds
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retry-After: Fri, 31 Dec 1999 23:59:59 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retry-After: 120
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the latter example, the delay is 2 minutes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Server response-header field contains information about the software used by the origin server to handle the request. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server : product | comment
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the response is being forwarded through a proxy, the proxy application must not modify the Server response-header.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Set-Cookie&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Set-Cookie response-header field contains a name/value pair of information to retain for this URL. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-Cookie: NAME=VALUE; OPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;entity-headers&#34;&gt;Entity Headers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Allow&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Allow entity-header field lists the set of methods supported by the resource identified by the Request-URI. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Allow : Method
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can specify multiple methods separated by commas. Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Allow: GET, HEAD, PUT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This field cannot prevent a client from trying other methods.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Encoding&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Encoding entity-header field is used as a modifier to the media-type. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Encoding : content-coding
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The content-coding is a characteristic of the entity identified by the Request-URI. Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the content-coding of an entity in a request message is not acceptable to the origin server, the server should respond with a status code of 415 (Unsupported Media Type).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Language&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Language entity-header field describes the natural language(s) of the intended audience for the enclosed entity. Following is the general syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Language : language-tag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Multiple languages may be listed for content that is intended for multiple audiences. Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Language: mi, en
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The primary purpose of Content-Language is to allow a user to identify and differentiate entities according to the user&amp;rsquo;s own preferred language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Length&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent, had the request been a GET. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length : DIGITS
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 3495
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any Content-Length greater than or equal to zero is a valid value.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Location&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Location entity-header field may be used to supply the resource location for the entity enclosed in the message when that entity is accessible from a location separate from the requested resource&amp;rsquo;s URI. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Location:  absoluteURI | relativeURI 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Location: http://www.tutorialspoint.org/http/index.htm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The value of Content-Location also defines the base URI for the entity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-MD5&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-MD5 entity-header field may be used to supply an MD5 digest of the entity for checking the integrity of the message upon receipt. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-MD5  : md5-digest using base64 of 128 bit MD5 digest as per RFC 1864
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is a simple example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-MD5  : 8c2d46911f3f5a326455f0ed7a8ed3b3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The MD5 digest is computed based on the content of the entity-body, including any content-coding that has been applied, but not including any transfer-encoding applied to the message-body.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Range&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Range entity-header field is sent with a partial entity-body to specify where in the full entity-body the partial body should be applied. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range : bytes-unit SP first-byte-pos &amp;#34;-&amp;#34; last-byte-pos
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Examples of byte-content-range-spec values, assuming that the entity contains a total of 1234 bytes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The first 500 bytes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range : bytes 0-499/1234
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The second 500 bytes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range : bytes 500-999/1234
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; All except for the first 500 bytes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range : bytes 500-1233/1234
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; The last 500 bytes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range : bytes 734-1233/1234
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When an HTTP message includes the content of a single range, this content is transmitted with a Content-Range header, and a Content-Length header showing the number of bytes actually transferred. For example,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 206 Partial content
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Wed, 15 Nov 1995 06:25:24 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Range: bytes 21010-47021/47022
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 26012
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: image/gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content-Type&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Content-Type entity-header field indicates the media type of the entity-body sent to the recipient or, in the case of the HEAD method, the media type that would have been sent, had the request been a GET. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type : media-type
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html; charset=ISO-8859-4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Expires&lt;/strong&gt;
The Expires entity-header field gives the date/time after which the response is considered stale. The general syntax is:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Expires : HTTP-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Expires: Thu, 01 Dec 1994 16:00:00 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Last-Modified&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Last-Modified entity-header field indicates the date and time at which the origin server believes the variant was last modified. The general syntax is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: HTTP-date
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-cookies&#34;&gt;HTTP Cookies&lt;/h2&gt;
&lt;p&gt;A cookie is a piece of data that is issued by a server in an HTTP response and stored for future use by the HTTP client. The client then re-supplies the cookie value in subsequent requests to the same server. This mechanism allows the server to store user preferences and identity individual users.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#setting-cookies&#34;&gt;&lt;strong&gt;Setting Cookies&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#retrieving-cookies&#34;&gt;&lt;strong&gt;Retrieving Cookies&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setting-cookies&#34;&gt;Setting Cookies&lt;/h4&gt;
&lt;p&gt;Servers supply cookies by populating the set-cookie response header with the following details:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Name&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Name of the cookie&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;td&gt;Textual value to be held by the cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expires&lt;/td&gt;
&lt;td&gt;Date/time when the cookie should be discarded by the browser. If this field is empty the cookie expires at the end of the current browser session. This field can also be used to delete a cookie by setting a date/time in the past.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Path&lt;/td&gt;
&lt;td&gt;Path below which the cookie should be supplied by the browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain&lt;/td&gt;
&lt;td&gt;Web site domain to which this cookie applies. This will default to the current domain and attempts to set cookies on other domains are subject to the privacy controls built into the browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These fields allow a server to create, modify, delete, and control which parts of a web site will receive the cookie.&lt;/p&gt;
&lt;h4 id=&#34;retrieving-cookies&#34;&gt;Retrieving Cookies&lt;/h4&gt;
&lt;p&gt;Whenever a client is about to make an HTTP request it consults its local cookie store to see if any unexpired cookies match the path and domain it is about to use. Any matching cookie values are submitted back to the server using the cookie header.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The following cookies were sent to the page:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name  _ga
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Value  GA1.2.1603568968.1681366048
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;http-caching&#34;&gt;HTTP Caching&lt;/h2&gt;
&lt;p&gt;HTTP is typically used for distributed information systems, where performance can be improved by the use of response caches. The HTTP/1.1 protocol includes a number of elements intended to make caching work.&lt;/p&gt;
&lt;p&gt;The goal of caching in HTTP/1.1 is to eliminate the need to send requests in many cases, and to eliminate the need to send full responses in many other cases.&lt;/p&gt;
&lt;p&gt;The basic cache mechanisms in HTTP/1.1 are implicit directives to caches where server-specifies expiration times and validators. We use the Cache-Control header for this purpose.&lt;/p&gt;
&lt;p&gt;The Cache-Control header allows a client or server to transmit a variety of directives in either requests or responses. These directives typically override the default caching algorithms. The caching directives are specified in a comma-separated list. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cache-control: no-cache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following cache request directives can be used by the client in its HTTP request:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Cache Request Directive&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;A cache must not use the response to satisfy a subsequent request without successful revalidation with the origin server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;The cache should not store anything about the client request or server response.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-stale [ = seconds ]&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response that has exceeded its expiration time. If seconds are given, it must not be expired by more than that time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min-fresh = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose freshness lifetime is not less than its current age plus the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;Does not convert the entity-body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;only-if-cached&lt;/td&gt;
&lt;td&gt;Does not retrieve new data. The cache can send a document only if it is in the cache, and should not contact the origin-server to see if a newer copy exists.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following cache response directives can be used by the server in its HTTP response&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Cache Response Directive&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;Indicates that the response may be cached by any cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;Indicates that all or part of the response message is intended for a single user and must not be cached by a shared cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;A cache must not use the response to satisfy a subsequent request without successful re-validation with the origin server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;The cache should not store anything about the client request or server response.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;Does not convert the entity-body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;must-revalidate&lt;/td&gt;
&lt;td&gt;The cache must verify the status of stale documents before using it and expired ones should not be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy-revalidate&lt;/td&gt;
&lt;td&gt;The proxy-revalidate directive has the same meaning as the must- revalidate directive, except that it does not apply to non-shared user agent caches.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age = seconds&lt;/td&gt;
&lt;td&gt;Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s-maxage = seconds&lt;/td&gt;
&lt;td&gt;The maximum age specified by this directive overrides the maximum age specified by either the max-age directive or the Expires header. The s-maxage directive is always ignored by a private cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;http-cache-vs-http-cookies&#34;&gt;HTTP Cache vs HTTP Cookies&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameters&lt;/th&gt;
&lt;th&gt;Http Cache&lt;/th&gt;
&lt;th&gt;Http Cookies&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Basics&lt;/td&gt;
&lt;td&gt;A system uses caches for storing content from a website and applications. They make things more accessible for a user.&lt;/td&gt;
&lt;td&gt;A website or application uses cookies to store the user’s activities and identify their trail of preferences.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Things Stored&lt;/td&gt;
&lt;td&gt;Cache stores Javascript, CSS, HTML pages, media (images and videos), etc.&lt;/td&gt;
&lt;td&gt;Cookies store temporary data for tracking, such as browsing sessions, history of using websites and apps, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Capacity&lt;/td&gt;
&lt;td&gt;Caches are comparatively less memory efficient. They occupy a lot of space on any device.&lt;/td&gt;
&lt;td&gt;Cookies are far more efficient with the device’s memory. They take up a very lesser amount of memory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Location of Storage&lt;/td&gt;
&lt;td&gt;The cache stores the website content only on a user browser.&lt;/td&gt;
&lt;td&gt;Cookies store their content on both- a server as well as a browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expiration&lt;/td&gt;
&lt;td&gt;One needs to delete the cache manually. It does not expire automatically.&lt;/td&gt;
&lt;td&gt;The cookies have a very limited life span that depends entirely on their creators. The cookies, thus, expire after a fixed amount of time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sent with a Request&lt;/td&gt;
&lt;td&gt;Sending a response in the form of cache does not come as a request to a user.&lt;/td&gt;
&lt;td&gt;Cookies pop up as a request in front of the users as a form of authorization/permission from them. In other words, it only sends a response to the servers with the end user’s confirmation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Types&lt;/td&gt;
&lt;td&gt;Proxy Cache and Browser Cache.&lt;/td&gt;
&lt;td&gt;Persistent Cookies and Transient Cookies.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;http-url-encoding&#34;&gt;HTTP URL Encoding&lt;/h2&gt;
&lt;p&gt;HTTP URLs can only be sent over the Internet using the ASCII character-set, which often contain characters outside the ASCII set. So these unsafe characters must be replaced with a % followed by two hexadecimal digits.&lt;/p&gt;
&lt;p&gt;The following table shows the ASCII symbols of the characters and their replacements which can be used in the URL before passing it to the server:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;&lt;em&gt;ASCII&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;&lt;em&gt;Symbol&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;&lt;em&gt;Replacement&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;lt; 32&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Encode with %xx where xx is the hexadecimal representation of the character.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;32&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;space&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+ or %20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;33&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;!&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;34&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;35&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;##&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;36&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;37&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;38&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;39&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&#39;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;40&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;(&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;41&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;42&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;*&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;43&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%2B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;44&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;,&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%2C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;45&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;46&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;47&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%2F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;48&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;49&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;51&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;52&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;53&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;54&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;55&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;56&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;57&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;58&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;59&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;60&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;lt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;61&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;=&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;62&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;63&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;?&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;64&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;@&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;66&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;B&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;67&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;C&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;D&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;E&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;F&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;71&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;G&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;72&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;H&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;73&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;I&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;I&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;74&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;J&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;J&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;75&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;K&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;76&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;L&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;77&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;M&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;78&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;79&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;80&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;P&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;P&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;81&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Q&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;82&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;R&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;83&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;S&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;S&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;84&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;85&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;U&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;U&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;86&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;V&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;87&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;88&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;89&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Y&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Z&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Z&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;91&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%5B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;92&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%5C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;93&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%5D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;94&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Backslash&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%5E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;95&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;_&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;96&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Backtick&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;97&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;a&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;98&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;b&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;99&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;c&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;d&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;101&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;e&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;102&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;f&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;f&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;103&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;g&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;104&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;h&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;h&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;105&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;i&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;i&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;106&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;j&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;j&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;107&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;k&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;108&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;l&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;l&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;109&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;m&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;110&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;n&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;111&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;o&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;o&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;112&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;p&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;p&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;113&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;q&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;114&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;r&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;r&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;115&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;116&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;t&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;t&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;117&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;u&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;u&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;118&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;119&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;w&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;w&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;120&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;121&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;y&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;122&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;z&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;z&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;123&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;{&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%7B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;124&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;pipe&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%7C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;125&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;}&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%7D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;126&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;~&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%7E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;127&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%7F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;gt; 127&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Encode with %xx where xx is the hexadecimal representation of the character.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;http-security&#34;&gt;HTTP Security&lt;/h2&gt;
&lt;p&gt;HTTP is used for communications over the internet, so application developers, information providers, and users should be aware of the security limitations in HTTP/1.1. This discussion does not include definitive solutions to the problems mentioned here but it does make some suggestions for reducing security risks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#personal-information-leakage&#34;&gt;&lt;strong&gt;Personal Information Leakage&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#file-and-path-names-based-attack&#34;&gt;&lt;strong&gt;File and Path Names Based Attack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dns-spoofing&#34;&gt;&lt;strong&gt;DNS Spoofing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#location-headers-and-spoofing&#34;&gt;&lt;strong&gt;Location Headers and Spoofing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#authentication-credentials&#34;&gt;&lt;strong&gt;Authentication Credentials&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#proxies-and-caching&#34;&gt;&lt;strong&gt;Proxies and Caching&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;personal-information-leakage&#34;&gt;Personal Information Leakage&lt;/h4&gt;
&lt;p&gt;HTTP clients are often privy to large amount of personal information such as the user&amp;rsquo;s name, location, mail address, passwords, encryption keys, etc. So you should be very careful to prevent unintentional leakage of this information via the HTTP protocol to other sources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All the confidential information should be stored at the server in encrypted form.&lt;/li&gt;
&lt;li&gt;Revealing the specific software version of the server might allow the server machine to become more vulnerable to attacks against software that is known to contain security holes.&lt;/li&gt;
&lt;li&gt;Proxies that serve as a portal through a network firewall should take special precautions regarding the transfer of header information that identifies the hosts behind the firewall.&lt;/li&gt;
&lt;li&gt;The information sent in the &amp;lsquo;From&amp;rsquo; field might conflict with the user&amp;rsquo;s privacy interests or their site&amp;rsquo;s security policy, and hence, it should not be transmitted without the user being able to disable, enable, and modify the contents of the field.&lt;/li&gt;
&lt;li&gt;Clients should not include a Referer header field in a (non-secure) HTTP request, if the referring page was transferred with a secure protocol.&lt;/li&gt;
&lt;li&gt;Authors of services that use the HTTP protocol should not use GET based forms for the submission of sensitive data, because it will cause the data to be encoded in the Request-URI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;file-and-path-names-based-attack&#34;&gt;File and Path Names Based Attack&lt;/h4&gt;
&lt;p&gt;The document should be restricted to the documents returned by HTTP requests to be only those that were intended by the server administrators.&lt;/p&gt;
&lt;p&gt;For example, UNIX, Microsoft Windows, and other operating systems use &amp;lsquo;..&amp;rsquo; as a path component to indicate a directory level above the current one. On such a system, an HTTP server MUST disallow any such construct in the Request-URI, if it would otherwise allow access to a resource outside those intended to be accessible via the HTTP server.&lt;/p&gt;
&lt;h4 id=&#34;dns-spoofing&#34;&gt;DNS Spoofing&lt;/h4&gt;
&lt;p&gt;Clients using HTTP rely heavily on the Domain Name Service, and are thus generally prone to security attacks based on the deliberate mis-association of IP addresses and DNS names. So clients need to be cautious in assuming the continuing validity of an IP number/DNS name association.&lt;/p&gt;
&lt;p&gt;If HTTP clients cache the results of host name lookups in order to achieve a performance improvement, they must observe the TTL information reported by the DNS. If HTTP clients do not observe this rule, they could be spoofed when a previously-accessed server&amp;rsquo;s IP address changes.&lt;/p&gt;
&lt;h4 id=&#34;location-headers-and-spoofing&#34;&gt;Location Headers and Spoofing&lt;/h4&gt;
&lt;p&gt;If a single server supports multiple organizations that do not trust one another, then it MUST check the values of Location and Content Location headers in the responses that are generated under the control of said organizations to make sure that they do not attempt to invalidate resources over which they have no authority.&lt;/p&gt;
&lt;h4 id=&#34;authentication-credentials&#34;&gt;Authentication Credentials&lt;/h4&gt;
&lt;p&gt;Existing HTTP clients and user agents typically retain authentication information indefinitely. HTTP/1.1 does not provide a method for a server to direct clients to discard these cached credentials which is a big security risk.&lt;/p&gt;
&lt;p&gt;There are a number of work around to the parts of this problem, and so it is recommended to make the use of password protection in screen savers, idle time-outs, and other methods that mitigate the security problems inherent in this problem.&lt;/p&gt;
&lt;h4 id=&#34;proxies-and-caching&#34;&gt;Proxies and Caching&lt;/h4&gt;
&lt;p&gt;HTTP proxies are men-in-the-middle, and represent an opportunity for man-in-the-middle attacks. Proxies have access to security-related information, personal information about individual users and organizations, and proprietary information belonging to users and content providers.&lt;/p&gt;
&lt;p&gt;Proxy operators should protect the systems on which proxies run, as they would protect any system that contains or transports sensitive information.&lt;/p&gt;
&lt;p&gt;Caching proxies provide additional potential vulnerabilities, since the contents of the cache represent an attractive target for malicious exploitation. Therefore, cache contents should be protected as sensitive information.&lt;/p&gt;
&lt;h2 id=&#34;http-examples&#34;&gt;HTTP Examples&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HTTP request to fetch hello.htm page from the web server&lt;/p&gt;
&lt;p&gt;Client request&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /hello.htm HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Server response&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Mon, 27 Jul 2009 12:28:53 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 88
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello, World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HTTP request to fetch t.html page that does not exist on the web server.&lt;/p&gt;
&lt;p&gt;Client request&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /t.html HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: www.tutorialspoint.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-us
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Server response&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 404 Not Found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Sun, 18 Oct 2012 10:36:20 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache/2.2.14 (Win32)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 230
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html; charset=iso-8859-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: Closed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-htm&#34; data-lang=&#34;htm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//IETF//DTD HTML 2.0//EN&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;404 Not Found&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Not Found&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;The requested URL /t.html was not found on this server.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/http/index.htm&#34;&gt;https://www.tutorialspoint.com/http/index.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javatpoint.com/http-tutorial&#34;&gt;https://www.javatpoint.com/http-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: MySQL</title>
      <link>https://padmanabhansaravanan.github.io/website/docs/mysql/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://padmanabhansaravanan.github.io/website/docs/mysql/readme/</guid>
      <description>
        
        
        &lt;h1 id=&#34;mysql&#34;&gt;MYSQL&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/My-sql.png&#34; alt=&#34;image My-Sql&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;table-of-content&#34;&gt;Table OF Content&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#introduction-to-mysql&#34;&gt;Introduction to MySQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#data-types&#34;&gt;Data Types&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#constraints&#34;&gt;Constraints&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#data-definition-language&#34;&gt;Data Definition Language(DDL)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#data-manipulation-lanaguage&#34;&gt;Data Manipulation Lanaguage(DML)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#data-control-language&#34;&gt;Data Control Language&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#transaction-control-lanaguage&#34;&gt;Transaction Control Lanaguage(TCL)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#data-query-retrieval-language&#34;&gt;Data Query/Retrieval Language (DQL/DRL)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#joins&#34;&gt;Joins&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-views&#34;&gt;MySQL Views&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-stored-procedure&#34;&gt;MySQL Stored Procedure&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-trigger&#34;&gt;MySQL TRIGGERS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-index&#34;&gt;MySQL INDEX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-cursors&#34;&gt;MySQL CURSORS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-functions&#34;&gt;MySQL Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#reference&#34;&gt;Reference &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;introduction-to-mysql&#34;&gt;Introduction to MySQL&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Introduction.png&#34; alt=&#34;Introduction&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;{{1}} &lt;a href=&#34;#what-is-database&#34;&gt;What is Database&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{{2}} &lt;a href=&#34;#what-is-mysql&#34;&gt;What is MySQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{{3}} &lt;a href=&#34;#mysql-rdbms&#34;&gt;What is MySQL RDMS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{{4}} &lt;a href=&#34;#mysql-sql&#34;&gt;MySQL SQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{{5}} &lt;a href=&#34;#installation-of-mysql-workbench&#34;&gt;WorkBench Installation&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;what-is-database&#34;&gt;What is Database&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A database is an organized collection of structured information, or data, typically stored electronically in a computer system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Databases make data management easy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A database is usually controlled by a database management system (DBMS).
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Database.png&#34; alt=&#34;image data-base&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-is-mysql&#34;&gt;What is MySQL&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MySQL is a relational database management system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL is free and open-source.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL is ideal for both small and large applications&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL is very fast, reliable, scalable, and easy to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL is cross-platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL is compliant with the ANSI SQL standard
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Who Uses MySQL&lt;/strong&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Huge websites like Facebook, Twitter, Airbnb, Booking.com, Uber, GitHub, YouTube, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Content Management Systems like WordPress, Drupal, Joomla!, Contao, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A very large number of web developers around the world&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mysql-rdbms&#34;&gt;MySQL RDBMS&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;What is RDBMS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RDBMS stands for Relational Database Management System.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RDBMS is a program used to create, update, and manage relational databases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some of the most well-known RDBMSs include MySQL, PostgreSQL, MariaDB, Microsoft SQL Server, and Oracle Database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RDBMS uses SQL queries to access the data in the database.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/RDBMS.png&#34; alt=&#34;image RDBMS-data-base&#34;&gt;&amp;ldquo;A relational database defines database relationships in the form of tables. The tables are related to each other - based on data common to each. Look at the following two tables &amp;ldquo;Customers&amp;rdquo; and &amp;ldquo;Orders&amp;rdquo;,The relationship between the &amp;ldquo;Customers&amp;rdquo; table and the &amp;ldquo;Orders&amp;rdquo; table is the CustomerID column&amp;rdquo;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql-sql&#34;&gt;MySQL SQL&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;What is SQL&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL is used to communicate with a database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;According to ANSI (American National Standards Institute), it is the standard language for relational database management systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL statements are used to perform tasks such as update data on a database or retrieving data from a database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;SELECT - extracts data from a database&lt;/li&gt;
&lt;li&gt;UPDATE - updates data in a database&lt;/li&gt;
&lt;li&gt;DELETE - deletes data from a database&lt;/li&gt;
&lt;li&gt;INSERT INTO - inserts new data into a database&lt;/li&gt;
&lt;li&gt;CREATE DATABASE - creates a new database&lt;/li&gt;
&lt;li&gt;ALTER DATABASE - modifies a database&lt;/li&gt;
&lt;li&gt;CREATE TABLE - creates a new table&lt;/li&gt;
&lt;li&gt;ALTER TABLE - modifies a table&lt;/li&gt;
&lt;li&gt;DROP TABLE - deletes a table&lt;/li&gt;
&lt;li&gt;CREATE INDEX - creates an index (search key)&lt;/li&gt;
&lt;li&gt;DROP INDEX - deletes an index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/workbench/en/wb-keys.html&#34;&gt;Refer this link for MySql shortcuts&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation-of-mysql-workbench&#34;&gt;Installation of MySQL WorkBench&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Steps to install MySQL&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;{{1-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Click on the link : (&lt;a href=&#34;https://dev.mysql.com/downloads/&#34;&gt;https://dev.mysql.com/downloads/&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{{2-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Select MySQL Installer for Windows
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mySQL-Installer.png&#34; alt=&#34;image MySQL Installer for Windows&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{{3-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Download MySQL Installer web community 2.4 M
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mySQL-Installer-version.png&#34; alt=&#34;image MySQL Installer for Windows &#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{{4-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: click on No thanks, just start my download.
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mySQL-Installer-version-nothanks.png&#34; alt=&#34;image MySQL Installer for Windows &#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{{5-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: click on the downloaded file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{{6-7}}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step 6&lt;/strong&gt;: setting up the Workbench
(&lt;a href=&#34;https://www.youtube.com/watch?v=YSOY_NyOg40&#34;&gt;https://www.youtube.com/watch?v=YSOY_NyOg40&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;creation-of-database&#34;&gt;Creation of database&lt;/h2&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE DATABASE database_name;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE DATABASE EmployeeDB;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/create-database.png&#34; alt=&#34;database creation&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;data-types&#34;&gt;Data Types&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#text-data-types&#34;&gt;Text data types&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#number-data-types&#34;&gt;Number data Types&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#date-data-types&#34;&gt;Date data types&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.devart.com/mysql-data-types.html&#34;&gt;For examples refer this link&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/datatypes.png&#34; alt=&#34;image MySQL datatypes &#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;text-data-types&#34;&gt;Text data types&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Data Type&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CHAR(size)&lt;/td&gt;
&lt;td&gt;Holds a fixed length string (can contain letters, numbers, and special characters). The fixed size is specified in parenthesis.Can store up to 255 characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR(size)&lt;/td&gt;
&lt;td&gt;Holds a variable length string (can contain letters, numbers, and special characters). The maximum size is specified in parenthesis.Can store up to 255 characters. Note: If you put a greater value than 255 it will be converted to a TEXT type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYTEXT&lt;/td&gt;
&lt;td&gt;Holds a string with a maximum length of 255 characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;Holds a string with a maximum length of 65,535 characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB&lt;/td&gt;
&lt;td&gt;For BLOBs (Binary Large OBjects). Holds up to 65,535 bytes of data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMTEXT&lt;/td&gt;
&lt;td&gt;Holds a string with a maximum length of 16,777,215 characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMBLOB&lt;/td&gt;
&lt;td&gt;For BLOBs (Binary Large OBjects). Holds up to 16,777,215 bytes of data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGTEXT&lt;/td&gt;
&lt;td&gt;Holds a string with a maximum length of 4,294,967,295 characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGBLOB&lt;/td&gt;
&lt;td&gt;For BLOBs (Binary Large OBjects). Holds up to 4,294,967,295 bytes of data&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;number-data-types&#34;&gt;Number data Types&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Data Type&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Lower limit&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Upper limit&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Memory&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bigint&lt;/td&gt;
&lt;td&gt;It stores whole numbers in the range given&lt;/td&gt;
&lt;td&gt;−2^63 (−9,223,372, 036,854,775,808)&lt;/td&gt;
&lt;td&gt;2^63−1 (9,223,372, 036,854,775,807)&lt;/td&gt;
&lt;td&gt;8 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;It stores whole numbers in the range given&lt;/td&gt;
&lt;td&gt;−2^31 (−2,147, 483,648)&lt;/td&gt;
&lt;td&gt;2^31−1 (2,147, 483,647)&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smallint&lt;/td&gt;
&lt;td&gt;It stores whole numbers in the range given&lt;/td&gt;
&lt;td&gt;−2^15 (−32,767)&lt;/td&gt;
&lt;td&gt;2^15 (32,768)&lt;/td&gt;
&lt;td&gt;2 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tinyint&lt;/td&gt;
&lt;td&gt;It stores whole numbers in the range given&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;255&lt;/td&gt;
&lt;td&gt;1 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decimal&lt;/td&gt;
&lt;td&gt;Used for scale and fixed precision numbers&lt;/td&gt;
&lt;td&gt;−10^38+1&lt;/td&gt;
&lt;td&gt;10^381−1&lt;/td&gt;
&lt;td&gt;5 to 17 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Used for a floating precision number&lt;/td&gt;
&lt;td&gt;−1.79E+308&lt;/td&gt;
&lt;td&gt;1.79E+308&lt;/td&gt;
&lt;td&gt;7 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;A large number with a floating decimal point&lt;/td&gt;
&lt;td&gt;−3.40E+38&lt;/td&gt;
&lt;td&gt;−3.40E+38&lt;/td&gt;
&lt;td&gt;15 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;meduimint&lt;/td&gt;
&lt;td&gt;It stores whole numbers in the range given&lt;/td&gt;
&lt;td&gt;−8,388,608&lt;/td&gt;
&lt;td&gt;+8,388,608&lt;/td&gt;
&lt;td&gt;3 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;date-data-types&#34;&gt;Date data types&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Data Type&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DATE()&lt;/td&gt;
&lt;td&gt;A date. Format: YYYY-MM-DD &lt;strong&gt;Note&lt;/strong&gt;: The supported range is from &amp;lsquo;1000-01-01&amp;rsquo; to &amp;lsquo;9999-12-31&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATETIME()&lt;/td&gt;
&lt;td&gt;A date and time combination. Format: YYYY-MM-DD HH:MI:SS &lt;strong&gt;Note&lt;/strong&gt;: The supported range is from &amp;lsquo;1000-01-01 00:00:00&amp;rsquo; to &amp;lsquo;9999-12-31 23:59:59&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIMESTAMP()&lt;/td&gt;
&lt;td&gt;A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch (&amp;lsquo;1970-01-01 00:00:00&amp;rsquo; UTC). Format: YYYY-MM-DD HH:MI:SS &lt;strong&gt;Note&lt;/strong&gt;: The supported range is from &amp;lsquo;1970-01-01 00:00:01&amp;rsquo; UTC to &amp;lsquo;2038-01-09 03:14:07&amp;rsquo; UTC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME()&lt;/td&gt;
&lt;td&gt;A time. Format: HH:MI:SS &lt;strong&gt;Note&lt;/strong&gt;: The supported range is from &amp;lsquo;-838:59:59&amp;rsquo; to &amp;lsquo;838:59:59&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YEAR()&lt;/td&gt;
&lt;td&gt;A year in two-digit or four-digit format.&lt;strong&gt;Note&lt;/strong&gt;: Values allowed in four-digit format: 1901 to 2155. Values allowed in two-digit format: 70 to 69, representing years from 1970 to 2069&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;constraints&#34;&gt;Constraints&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MySQL CONSTRAINT is used to define rules to allow or restrict what values can be stored in columns. The purpose of inducing constraints is to enforce the integrity of a database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL CONSTRAINTS are used to limit the type of data that can be inserted into a table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL CONSTRAINTS can be classified into two types - column level and table level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The column-level constraints can apply only to one column where as table-level constraints are applied to the entire table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL CONSTRAINT is declared at the time of creating a table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MySQL CONSTRAINTs are&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#not-null&#34;&gt;NOT NULL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#unique&#34;&gt;UNIQUE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#primary-key&#34;&gt;PRIMARY KEY&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#foreign-key&#34;&gt;FOREIGN KEY&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#default&#34;&gt;DEFAULT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;not-null&#34;&gt;NOT NULL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The NOT NULL constraint enforces a column to NOT accept NULL values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This enforces a field to always contain a value, which means that you cannot insert a new record, or update a record without adding a value to this field.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Not NULL on Creating a Table&lt;/strong&gt;:-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Not-Null.png&#34; alt=&#34;image not null &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;unique&#34;&gt;UNIQUE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The UNIQUE constraint ensures that all values in a column are different.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both the UNIQUE and PRIMARY KEY constraints provide a guarantee for uniqueness for a column or set of columns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A PRIMARY KEY constraint automatically has a UNIQUE constraint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;However, you can have many UNIQUE constraints per table, but only one PRIMARY KEY constraint per table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UNIQUE (ID)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Unique-id.png&#34; alt=&#34;image- Unique-id &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;multiple-unique-constraints&#34;&gt;Multiple Unique Constraints&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns, use the following SQL syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CONSTRAINT UC_Employee UNIQUE (ID,LastName)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mulitiple-unique.png&#34; alt=&#34;image multiple unique  &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;unique-constraints-on-alter-table&#34;&gt;Unique Constraints on Alter Table&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To create a UNIQUE constraint on the &amp;ldquo;ID&amp;rdquo; &amp;amp; &amp;ldquo;LastName&amp;rdquo; column when the table is already created, use the following SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE Employee
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD CONSTRAINT UC_Employee UNIQUE (ID,LastName);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Alter-uniqueKey.png&#34; alt=&#34;image Alter multiple unique  &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;drop-a-unique--constraint&#34;&gt;Drop a Unique  Constraint&lt;/h3&gt;
&lt;p&gt;To drop a UNIQUE constraint, use the following MySQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE Employee
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DROP INDEX UC_Employee;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-unique.png&#34; alt=&#34;image drop &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;primary-key&#34;&gt;PRIMARY KEY&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The PRIMARY KEY constraint uniquely identifies each record in a table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Primary keys must contain UNIQUE values, and cannot contain NULL values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A table can have only ONE primary key; and in the table, this primary key can consist of single or multiple columns (fields).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PRIMARY KEY (ID)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/primary-key.png&#34; alt=&#34;image primary-key &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;multiple-primary-constraints&#34;&gt;Multiple Primary Constraints&lt;/h3&gt;
&lt;p&gt;To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns, use the following SQL syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   CONSTRAINT PK_Employee PRIMARY KEY (ID,LastName)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mulitiple-primary.png&#34; alt=&#34;image multiple-primary-key &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;primary-constraints-on-alter-table&#34;&gt;primary Constraints on Alter Table&lt;/h3&gt;
&lt;p&gt;To create a PRIMARY KEY constraint on the &amp;ldquo;ID&amp;rdquo; column when the table is already created, use the following SQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE Employee
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD PRIMARY KEY (ID);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/alter-pk.png&#34; alt=&#34;image alter-primary-key &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;drop-a-primary--constraint&#34;&gt;Drop a primary  Constraint&lt;/h3&gt;
&lt;p&gt;To drop a PRIMARY KEY constraint, use the following MySQL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE Employee
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DROP PRIMARY KEY;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-pk.png&#34; alt=&#34;image drop-primary-key &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;foreign-key&#34;&gt;FOREIGN KEY&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Employee Table&lt;/strong&gt;:-&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;EmployeeID&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;FirstName&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;LastName&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Age&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;texas&lt;/td&gt;
&lt;td&gt;John&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Phoenix&lt;/td&gt;
&lt;td&gt;justin&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;SpaceX&lt;/td&gt;
&lt;td&gt;elon&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Salary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;SalaryID&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Salary&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;EmployeeID&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;65000$&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;45000$&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;50000$&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Notice that the &amp;ldquo;EmployeeID&amp;rdquo; column in the &amp;ldquo;Salary&amp;rdquo; table points to the &amp;ldquo;EmployeeID&amp;rdquo; column in the &amp;ldquo;Employee&amp;rdquo; table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &amp;ldquo;EmployeeID&amp;rdquo; column in the &amp;ldquo;Employee&amp;rdquo; table is the PRIMARY KEY in the &amp;ldquo;Employee&amp;rdquo; table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &amp;ldquo;EmployeeID&amp;rdquo; column in the &amp;ldquo;Salary&amp;rdquo; table is a FOREIGN KEY in the &amp;ldquo;Salary&amp;rdquo; table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The FOREIGN KEY constraint prevents invalid data from being inserted into the foreign key column, because it has to be one of the values contained in the parent table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-foreign-key&#34;&gt;Create Foreign key&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Salary (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SalaryID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Salary int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    EmployeeID int,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PRIMARY KEY (SalaryID),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FOREIGN KEY (EmployeeID) REFERENCES Employee(ID)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/foreign-key.png&#34; alt=&#34;image foreign-key &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;foreign-constraints-on-alter-table&#34;&gt;foreign Constraints on Alter Table&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE Salary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD FOREIGN KEY (EmployeeID) REFERENCES Employee(ID);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/alter-fk.png&#34; alt=&#34;image alter-foreign-key &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;drop-a-foreign--constraint&#34;&gt;Drop a foreign  Constraint&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE Salary
DROP FOREIGN KEY FK_EmployeeSalary;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-fk.png&#34; alt=&#34;image drop-foreign-key &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;default&#34;&gt;DEFAULT&lt;/h2&gt;
&lt;p&gt;The following SQL sets a DEFAULT value for the &amp;ldquo;City&amp;rdquo; column when the &amp;ldquo;Persons&amp;rdquo; table is created:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE Employee (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID int NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FirstName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LastName varchar(255) NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Age int ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    City varchar(255) DEFAULT &amp;#39;US&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/default.png&#34; alt=&#34;image default &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;data-definition-language&#34;&gt;Data Definition Language&lt;/h1&gt;
&lt;p&gt;A data definition language (DDL) is a computer language used to create and modify the structure of database objects in a database. These database objects include views, schemas, tables, indexes, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Definition Laungauge Commands are as follows&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#create-command&#34;&gt;CREATE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#alter-command&#34;&gt;ALTER&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#drop-command&#34;&gt;DROP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#truncate-command&#34;&gt;TRUNCATE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-command&#34;&gt;Create Command&lt;/h2&gt;
&lt;p&gt;create is a DDL SQL command used to create a table in a relational database management system.
The table creation command requires the following details −&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Name of the table&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Name of the fields(Column)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Definitions for each field(Datatype)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/* to create database */
    CREATE DATABASE database_name;

    /* to create schema */
    CREATE SCHEMA schema_name;

    /* to create table */
CREATE TABLE &amp;lt;TABLE_NAME&amp;gt; 
	( 
		column_name1 datatype1, 
		column_name2 datatype2, 
		column_name3 datatype3, 
		column_name4 datatype4 
	);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create Command Example&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/* to create database */
CREATE DATABASE EmployeeManagement;

/* to create schema */
CREATE SCHEMA Employees;

/* to create table */
CREATE TABLE Employee (
    ID int NOT NULL,
    FirstName varchar(255) NOT NULL,
    LastName varchar(255) NOT NULL,
    Age int ,
   CONSTRAINT PK_Employee PRIMARY KEY (ID,LastName)
);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/create.png&#34; alt=&#34;image create &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;alter-command&#34;&gt;Alter Command&lt;/h2&gt;
&lt;p&gt;Alter statement is used to add, delete or modify columns in an exisiting table&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add column&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic syntax of an ALTER TABLE command to add a New Column in an existing table is as follows&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    ALTER  TABLE table_name
	ADD column_name datatype;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE Employee
ADD Email varchar(255);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Alter-table.png&#34; alt=&#34;image Alter-table &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;modify-column&#34;&gt;Modify column&lt;/h3&gt;
&lt;p&gt;The basic syntax of an ALTER TABLE command to change the DATA TYPE of a column in a table is as follows.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER  TABLE  table_name 
ALTER  COLUMN column_name  datatype;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE Employee
ADD DateOfBirth date;

ALTER TABLE Employee
MODIFY COLUMN DateOfBirth year;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Alter-modify.png&#34; alt=&#34;image Alter-modify &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;delete-column&#34;&gt;Delete column&lt;/h3&gt;
&lt;p&gt;The basic syntax of an ALTER TABLE command to DROP COLUMN in an existing table is as follows.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER  TABLE table_name 
DROP  COLUMN column_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE Employee
DROP COLUMN DateOfBirth;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:
&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-column.png&#34; alt=&#34;image Drop-column &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;drop-command&#34;&gt;Drop Command&lt;/h2&gt;
&lt;p&gt;It is very easy to drop an existing MySQL table, but you need to be very careful while deleting any existing table because the data lost will not be recovered after deleting a table.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP  TABLE  table_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP TABLE Employee
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-table.png&#34; alt=&#34;image Drop-table &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;truncate-command&#34;&gt;Truncate Command&lt;/h2&gt;
&lt;p&gt;TRUNCATE command removes all the records from a table. But this command will not destroy the table&amp;rsquo;s structure.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TRUNCATE TABLE table_name ;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
TRUNCATE TABLE Employee ;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/truncate-table.png&#34; alt=&#34;image truncate &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;data-manipulation-lanaguage&#34;&gt;Data Manipulation Lanaguage&lt;/h1&gt;
&lt;p&gt;The DML commands in Structured Query Language change the data present in the SQL database. We can easily access, store, modify, update and delete the existing records from the database using DML commands.&lt;/p&gt;
&lt;p&gt;DML Commands are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#insert-command&#34;&gt;Insert Command&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#update-command&#34;&gt;Update Command&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#delete-command&#34;&gt;Delete Command&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;insert-command&#34;&gt;Insert Command&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The SQL INSERT INTO Statement is used to add new rows of data to a table in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only one row is inserted with this syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Insert a new row containing values for each column.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List values in the default order of the columns in the table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optionally, list the columns in the insert clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enclose character and data values within single quotation marks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is possible to write the INSERT INTO statement in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Specify both the column names and the values to be inserted:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;If you are adding values for all the columns of the table, you do not need to specify the column names in the SQL query. However, make sure the order of the values is in the same order as the columns in the table. Here, the INSERT INTO syntax would be as follows:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO table_name VALUES (value1, value2, value3, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO Employee (ID,FirstName, LastName, Age)
VALUES (1,&amp;#39;Cardinal&amp;#39;, &amp;#39;Tom B. Erichsen&amp;#39;, 21);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/insert.png&#34; alt=&#34;image insert &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;update-command&#34;&gt;Update Command&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The UPDATE Query is used to modify the existing records in a table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the WHERE clause with the UPDATE query to update the selected rows, otherwise, all the rows would be affected.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UPDATE table_name 
SET column1 = value1, column2 = value2...., columnN = valueN 
WHERE [condition];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UPDATE Employee
SET FirstName = &amp;#39;Alfred&amp;#39;, LastName = &amp;#39;Schmidt&amp;#39;
WHERE ID = 1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/update.png&#34; alt=&#34;image update &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;delete-command&#34;&gt;Delete Command&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The SQL DELETE Query is used to delete the existing records from a table.&lt;/li&gt;
&lt;li&gt;You can use the WHERE clause with a DELETE query to delete the selected rows, otherwise all the records would be deleted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELETE FROM table_name 
WHERE [condition];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELETE FROM Employee WHERE  ID = 1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/delete.png&#34; alt=&#34;image delete &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;data-control-language&#34;&gt;Data Control Language&lt;/h1&gt;
&lt;p&gt;It is used to control privileges in Database. To perform any operation in the database, such as for creating tables, sequences or views, a user needs privileges.&lt;/p&gt;
&lt;p&gt;The DCL statements are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#grant-command&#34;&gt;GRANT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#revoke-command&#34;&gt;REVOKE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;grant-command&#34;&gt;Grant Command&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is used to provide any user access privileges or other privileges for the database&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to windows start menu and search mysql command line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on mysql command line. It will open the mysql command line and it looks like the following image and then enter the password&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/commandline.png&#34; alt=&#34;command line &#34;&gt;&lt;/p&gt;
&lt;p&gt;Syntax for creating the user:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER user_name IDENTIFIED BY &amp;#39;user_password&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example for creating the user:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
CREATE USER john@localhost IDENTIFIED BY &amp;#39;jtp12345&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Syntax for granting privilages:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GRANT ALL ON Object.* TO user_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example for granting privilages:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
GRANT ALL ON employee.* TO john@localhost;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/grant.png&#34; alt=&#34;image grant &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;revoke-command&#34;&gt;Revoke Command&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It is used to take back the privileges from any user, use the REVOKE command.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REVOKE privilege_name(s)   
ON object   
FROM user_account_name;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REVOKE ALL, GRANT OPTION FROM john@localhost;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/revoke.png&#34; alt=&#34;image revoke &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;transaction-control-lanaguage&#34;&gt;Transaction Control Lanaguage&lt;/h1&gt;
&lt;p&gt;Database Transactions:&lt;/p&gt;
&lt;p&gt;A transaction begins with the first statement is encounterd and ends when one of the following occurs.This command is used to manage changes to DML statements.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A commit or rollback statement is issued.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A DDL statement, such as create is issued.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A DCL statement is issued.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The system crashes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After one transaction ends, the next executable SQL statement automatically starts the next transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A DDL statement or a DCL statement is automatically committed and therefore implicitly ends a transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can control the logic of transactions by using the&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#commit&#34;&gt;Commit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#savepoint&#34;&gt;Savepoint&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#rollback&#34;&gt;Rollback&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;commit&#34;&gt;Commit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;COMMIT command is used to permanently save any transaction into the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When we use any DML command like INSERT, UPDATE or DELETE, the changes made by these commands are not permanent, until the current session is closed, the changes made by these commands can be rolled back.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid that, we use the COMMIT command to mark the changes as permanent.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;COMMIT;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;COMMIT;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/commit.png&#34; alt=&#34;image commit &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;savepoint&#34;&gt;Savepoint&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SAVEPOINT command is used to temporarily save a transaction so that you can rollback to that point whenever required.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	SAVEPOINT savepoint_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
	SAVEPOINT transactionA;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/savepoint.png&#34; alt=&#34;image savepoint &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rollback&#34;&gt;Rollback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This command restores the database to last commited state. It is also used with SAVEPOINT command to jump to a savepoint in an ongoing transaction.&lt;/li&gt;
&lt;li&gt;If we have used the UPDATE command to make some changes into the database, and realise that those changes were not required, then we can use the ROLLBACK command to rollback those changes, if they were not commited using the COMMIT command.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ROLLBACK savepoint_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ROLLBACK to transactionA;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/rollback.png&#34; alt=&#34;image rollback &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;example-for-commit-savepoint-and-rollback&#34;&gt;Example for Commit, Savepoint and RollBack&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;create table student(id INT,name VARCHAR(20));
start transaction;
select * from student;
insert into student values(10,&amp;#39;Dravid&amp;#39;);
savepoint transactionInsert;
insert into student values(20,&amp;#39;Sachin&amp;#39;);
insert into student values(30,&amp;#39;Dhoni&amp;#39;);
insert into student values(40,&amp;#39;kohli&amp;#39;);
select * from student;
savepoint transactionDelete;
delete from student where id=10;
delete from student where id=20;
select * from student;
rollback to transactionDelete;
select * from student;
rollback to transactionDelete;
select * from student;
rollback;
select * from student;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/com-sav-rol.png&#34; alt=&#34;image com-sav-rol &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;data-query-retrieval-language&#34;&gt;Data Query Retrieval Language&lt;/h1&gt;
&lt;p&gt;SELECT statement is used to retrieve the information from database using select statement you can do the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Projection: It is used to choose columns in a table that you want returned by the query.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selection: It is used to choose rows in a table that you want returned by your query.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joining: You can choose the join capability in SQL to bring together data that is stored in different tables by creating a link between them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column1, column2, ...FROM table_name;

/* select all the fields available in the table */
SELECT * FROM table_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee;

SELECT Id,first_name,last_name FROM employee.employees;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Select.png&#34; alt=&#34;image select &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;arithmetic-expressions&#34;&gt;Arithmetic Expressions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create expressions with number and date data by using arithematic operators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Operator Precedence : * , / , + , -&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the operators within an expression are of same priority then evaluation is done from left to right.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT ID,FirstName,LastName,salary,(20*salary-100)/2 FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Arithmetic.png&#34; alt=&#34;image Arithmetic &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;column-aliases&#34;&gt;column aliases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Renames column heading&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is useful for calculations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Immediately followed by the column name, there can also be optional keyword AS keyword betweeen the column name and alias.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enclose alias name in double quotations if it contains a special characters such as # or $ or is case sensitive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Column aliases can be used in both select clause and the order by clause you cannot use column aliases in where clause.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name AS alias_name
FROM table_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT ID AS EmployeeID, FirstName  AS EmployeeName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/alias.png&#34; alt=&#34;image Aliases &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;clause&#34;&gt;Clause&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#distinct&#34;&gt;DISTINCT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#where&#34;&gt;WHERE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#order-by&#34;&gt;ORDER BY&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#group-by&#34;&gt;GROUP BY&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#having&#34;&gt;HAVING&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;distinct&#34;&gt;DISTINCT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The SQL DISTINCT keyword is used in conjunction with the SELECT statement to eliminate all the duplicate records and fetching only unique records.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There may be a situation when you have multiple duplicate records in a table. While fetching such records, it makes more sense to fetch only those unique records instead of fetching duplicate records and can be used for more than one column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distinct keyword should be used immediately after the select keyword.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distinct can also be used with multiple columns and it affects all the columns selected&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DISTINCT column1, column2,.....columnN 
FROM table_name  WHERE [condition]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DISTINCT FirstName  
FROM employee; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/distinct.png&#34; alt=&#34;image distinct &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;where&#34;&gt;WHERE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We restrict the rows returned by using the WHERE clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where restricts the query to rows that meets the condition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Condition is composed of column names ,expressions constants ,and a comparison operator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where consists of three elements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;column name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;comparison condition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;column name, constant or list of values&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Character strings and date values are enclosed in single quotation marks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The WHERE clause is not only used in the SELECT statement, but it is also used in the UPDATE, DELETE statement, etc.,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	SELECT column1, column2,.....columnN 
FROM table_name 
WHERE [condition]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE ID = 1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/where.png&#34; alt=&#34;image where &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;order-by&#34;&gt;ORDER BY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;We sort rows by using order by clause .&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ASC: ascending order , default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DSC: descending order.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The order by clause comes last in the select statement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Order by clause is executed last in the query execution .it is placed last unless the for update clause is used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default sorting is ascending&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Numeric values are displayed with lowest values first ex: 1-999&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date values are displayed with earliest value first ex: 01-jan-92 before 01-jan-95.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Character values are displayed in alphabetic order ex: A-Z.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Null values are displayed last for ascending sequences and first for descending sequences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can also sort by a column number in the select list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column1, column2, ...
FROM table_name
ORDER BY column1, column2, ... ASC|DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
ORDER BY salary;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/order-by.png&#34; alt=&#34;image order by &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;order-by-desc&#34;&gt;ORDER BY DESC&lt;/h2&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column1, column2, ...
FROM table_name
ORDER BY column1, column2, ... ASC|DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
SELECT * FROM employee
ORDER BY salary DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Desc.png&#34; alt=&#34;image order by Desc &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;group-by&#34;&gt;GROUP BY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We use GROUP BY clause to divide the rows in a table into groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you include a group function in a select statement, you cannot select individual results as well ,unless the individual column appears in the GROUP BY clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using WHERE clause you can include rows before dividing them into groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You must include the columns in the GROUP BY clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use a column alias in the GROUP BY clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, rows are sorted by ascending order of the columns included in the group by list. You can override this by using ORDER BY clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use WHERE clause to restrict groups&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table_name
WHERE condition
GROUP BY column_name(s)
ORDER BY column_name(s);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT COUNT(ID), FirstName
FROM employee
GROUP BY FirstName
ORDER BY COUNT(ID) DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/group-by.png&#34; alt=&#34;image Group by Desc &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;having&#34;&gt;HAVING&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The HAVING Clause enables you to specify conditions that filter which group results appear in the results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The WHERE clause places conditions on the selected columns, whereas the HAVING clause places conditions on groups created by the GROUP BY clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The HAVING clause must follow the GROUP BY clause in a query and must also precede the ORDER BY clause if used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table_name
WHERE condition
GROUP BY column_name(s)
HAVING condition
ORDER BY column_name(s);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT COUNT(ID), salary
FROM employee
GROUP BY salary
HAVING COUNT(ID) &amp;gt; 1
ORDER BY COUNT(ID) DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Having.png&#34; alt=&#34;image having &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;logical-conditions&#34;&gt;Logical conditions&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Operator&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Meaning&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AND&lt;/td&gt;
&lt;td&gt;Returns true if both component conditions   are true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR&lt;/td&gt;
&lt;td&gt;Returns true if either component conditions   are true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT&lt;/td&gt;
&lt;td&gt;Returns true if false, Returns false if   true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ol&gt;
&lt;li&gt;AND&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
SELECT * FROM employee
WHERE FirstName = &amp;#34;nick&amp;#34; AND salary = 2500;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/and.png&#34; alt=&#34;image and &#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;OR&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE FirstName = &amp;#34;nick&amp;#34; OR salary = 2500;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/OR.png&#34; alt=&#34;image OR &#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;NOT&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE FirstName NOT LIKE &amp;#39;s%&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/NOT.png&#34; alt=&#34;image Not &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;comparision-conditions&#34;&gt;Comparision conditions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Operator&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;&lt;em&gt;Meaning&lt;/em&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;Equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;Greater than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;Greater than or Equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;Less than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;Less than or Equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;gt;,!=,^=&lt;/td&gt;
&lt;td&gt;Not equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE salary &amp;gt; 2500;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/greater-than.png&#34; alt=&#34;image greater-then &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;other-comparision-operator&#34;&gt;Other Comparision operator&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#between-and&#34;&gt;&lt;strong&gt;BETWEEN AND&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#in&#34;&gt;&lt;strong&gt;IN&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#like&#34;&gt;&lt;strong&gt;LIKE&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#is-null&#34;&gt;&lt;strong&gt;IS NULL&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;between-and&#34;&gt;BETWEEN AND&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BETWEEN and AND are actually translated by the sql server server to a pair of AND conditions (a&amp;gt;=lower limit) AND (a⇐ higher limit).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using BETWEEN AND has no performance benefits, and it is used logical simplicity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE salary BETWEEN 2000 AND 25000;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/between.png&#34; alt=&#34;image between &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;in&#34;&gt;IN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is used to test the values in a list. IN condition is also known as member ship condition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If characters or dates are used in a list they must be enclosed in a single quotation marks .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IN is actually translated by a sql server to a set of OR conditions a=value1 or a= value2 or a=value3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using IN has no performance benefits ,and is used for logical simplicity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE City IN (&amp;#39;Paris&amp;#39;,&amp;#39;London&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/IN.png&#34; alt=&#34;image IN &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;like&#34;&gt;LIKE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is used for performing wildcard searches of valid search string values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search conditions can contain either literal characters or numbers .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;% denotes zero or many characters .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;_ denotes one character or any single character.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE FirstName LIKE &amp;#39;e%&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/like.png&#34; alt=&#34;image like &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;is-null&#34;&gt;IS NULL&lt;/h3&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LastName,salary,City FROM employee WHERE salary IS NULL;

SELECT FirstName,LastName,salary,City FROM employee WHERE salary IS  NOT NULL;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/not-nu.png&#34; alt=&#34;image not-null &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;joins&#34;&gt;Joins&lt;/h1&gt;
&lt;p&gt;SQL Server (Transact-SQL) JOINS are used to retrieve data from multiple tables. A SQL Server JOIN is performed whenever two or more tables are joined in a SQL statement.&lt;/p&gt;
&lt;p&gt;There are 2 different types of SQL Server joins:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#inner-join&#34;&gt;INNER JOIN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#outer-join&#34;&gt;OUTER JOIN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Left Join&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Right Join&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#cross-join&#34;&gt;CROSS JOIN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;inner-join&#34;&gt;INNER JOIN&lt;/h2&gt;
&lt;p&gt;The INNER JOIN keyword selects records that have matching values in both tables.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table1
INNER JOIN table2
ON table1.column_name = table2.column_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Table:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE EmployeeDetails (
    EmployeeDetailsID int NOT NULL,
    ID int NOT NULL,
    Address varchar(255) NOT NULL,
    City varchar(255) NOT NULL , 
    PRIMARY KEY (EmployeeDetailsID),
    FOREIGN KEY (ID) REFERENCES Employee(ID)
);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT EmployeeDetails.EmployeeDetailsID, employee.FirstName
FROM EmployeeDetails
INNER JOIN employee ON EmployeeDetails.ID = employee.ID;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Inner-join.png&#34; alt=&#34;image inner-join &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;outer-join&#34;&gt;OUTER JOIN&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;LEFT JOIN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The LEFT JOIN keyword returns all records from the left table (table1), and the matching records from the right table (table2). The result is 0 records from the right side, if there is no match&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table1
LEFT JOIN table2
ON table1.column_name = table2.column_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT employee.FirstName, EmployeeDetails.EmployeeDetailsID
FROM employee
LEFT JOIN EmployeeDetails ON employee.ID = EmployeeDetails.ID
ORDER BY employee.FirstName;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Left-join.png&#34; alt=&#34;image left-join &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;right-join&#34;&gt;RIGHT JOIN&lt;/h3&gt;
&lt;p&gt;The RIGHT JOIN keyword returns all records from the right table (table2), and the matching records from the left table (table1). The result is 0 records from the left side, if there is no match.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table1
RIGHT JOIN table2
ON table1.column_name = table2.column_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT EmployeeDetails.EmployeeDetailsID, employee.LastName, employee.FirstName
FROM EmployeeDetails
RIGHT JOIN employee ON EmployeeDetails.ID = employee.ID
ORDER BY EmployeeDetails.EmployeeDetailsID;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/right-join.png&#34; alt=&#34;image right-join &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cross-join&#34;&gt;CROSS JOIN&lt;/h2&gt;
&lt;p&gt;The CROSS JOIN keyword returns all matching records from both tables whether the other table matches or not. So, if there are rows in &amp;ldquo;employee&amp;rdquo; that do not have matches in &amp;ldquo;EmployeeDetails&amp;rdquo;, or if there are rows in &amp;ldquo;EmployeeDetails&amp;rdquo; that do not have matches in &amp;ldquo;employee&amp;rdquo;, those rows will be listed as well.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT column_name(s)
FROM table1
CROSS JOIN table2;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT employee.FirstName, EmployeeDetails.EmployeeDetailsID
FROM employee
CROSS JOIN EmployeeDetails;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/cross-join.png&#34; alt=&#34;image cross-join &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql-views&#34;&gt;MySQL Views&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;View is a data object which does not contain any data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contents of the view are the resultant of a base table. They are operated just like base table but they don’t contain any data of their own.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The difference between a view and a table is that views are definitions built on top of other tables (or views).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If data is changed in the underlying table, the same change is reflected in the view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A view can be built on top of a single or multiple tables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Views can have column names and expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use any clauses in views.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Views can be used in INSERT/UPDATE/DELETE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Views can contain expressions in the select list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;View Commands are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#create-view&#34;&gt;Create View&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#alter-view&#34;&gt;Alter View&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#drop-view&#34;&gt;Drop View&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-view&#34;&gt;CREATE VIEW&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Following statements create a view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, a view is associated with the default database (currently used the database).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To associate the view with a given database, specify the name as database_name. view_name when you create it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE VIEW view_name AS
SELECT column1, column2, ...
FROM table_name
WHERE condition;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE VIEW sampleView2 
AS select ID,FirstName,salary from employee;

SELECT * FROM sampleView2;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/create-view.png&#34; alt=&#34;image create-view &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;alter-view&#34;&gt;ALTER VIEW&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ALTER VIEW statement changes the definition of an existing view. The syntax of the statement is similar to CREATE VIEW.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER VIEW [database_name].view_name [(column_list)]
AS select_statement

or

CREATE OR REPLACE VIEW view_name AS
SELECT column1, column2, ...
FROM table_name
WHERE condition;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DESCRIBE sampleView2;
ALTER VIEW sampleView2 AS select * from employee;
DESCRIBE sampleView2;

or

DESCRIBE sampleView2;
CREATE or REPLACE VIEW sampleView2 AS select ID,FirstName,salary from employee;
DESCRIBE sampleView2;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/alter-view.png&#34; alt=&#34;image Alter-view &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;drop-view&#34;&gt;DROP VIEW&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;DROP VIEW statement is used to remove one or more views. To drop a view, you must have DROP privilege for each view.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP VIEW view_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP VIEW sampleView2;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-view.png&#34; alt=&#34;image Drop-view &#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql-stored-procedure&#34;&gt;MySQL Stored Procedure&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A procedure (often called a stored procedure) is a subroutine like a subprogram in a regular computing language, stored in database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A procedure has a name, a parameter list, and SQL statement(s). All most all relational database system supports stored procedure, MySQL 5 introduce stored procedure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stored procedures which you call, or functions whose return values you use in other SQL statements the same way that you use pre-installed MySQL functions like pi().&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The major difference is that UDFs can be used like any other expression within SQL statements, whereas stored procedures must be invoked using the CALL statement.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#create-procedure&#34;&gt;Create Procedure&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-procedure-parameter&#34;&gt;MySQL procedure parameter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#alter-procedure&#34;&gt;Alter Procedure&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#drop-procedure&#34;&gt;Drop Procedure&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-procedure&#34;&gt;Create Procedure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Following statements create a stored procedure. By default, a procedure is associated with the default database (currently used database).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To associate the procedure with a given database, specify the name as database_name.stored_procedure_name when you create it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE PROCEDURE procedure_name
AS
BEGIN
sql_statement
END;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELIMITER $$
CREATE PROCEDURE spCreate()
BEGIN
CREATE TABLE sp_emp(id INT,name VARCHAR(20));	
END$$
DELIMITER ;

CALL spCreate(); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/create-procedure.png&#34; alt=&#34;image case&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mysql-procedure-parameter&#34;&gt;MySQL procedure parameter&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;IN parameter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is the default mode. It takes a parameter as input, such as an attribute. When we define it, the calling program has to pass an argument to the stored procedure. This parameter&amp;rsquo;s value is always protected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OUT parameters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is used to pass a parameter as output. Its value can be changed inside the stored procedure, and the changed (new) value is passed back to the calling program. It is noted that a procedure cannot access the OUT parameter&amp;rsquo;s initial value when it starts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;INOUT parameters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is a combination of IN and OUT parameters. It means the calling program can pass the argument, and the procedure can modify the INOUT parameter, and then passes the new value back to the calling program.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#procedure-without-parameter&#34;&gt;Procedure without Parameter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#procedures-with-in-parameter&#34;&gt;Procedures with IN Parameter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#procedures-with-inout-parameter&#34;&gt;Procedures with OUT Parameter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#procedures-with-out-parameter&#34;&gt;Procedures with INOUT Parameter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;procedure-without-parameter&#34;&gt;Procedure without Parameter&lt;/h4&gt;
&lt;p&gt;Suppose we want to display all records of this table whose salary are greater than 1000$ and count all the table rows. The following code creates a procedure named get_salary_employee:&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELIMITER &amp;amp;&amp;amp;  
CREATE PROCEDURE get_salary_employee ()  
BEGIN  
    SELECT * FROM employee WHERE salary &amp;gt; 1000;  
    SELECT COUNT(FirstName) AS Total_employee FROM employee;    
END &amp;amp;&amp;amp;  
DELIMITER ;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/proce-without.png&#34; alt=&#34;image case&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Output to call:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/proce-without-call.png&#34; alt=&#34;image case&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;procedures-with-in-parameter&#34;&gt;Procedures with IN Parameter&lt;/h4&gt;
&lt;p&gt;In this procedure, we have used the IN parameter as &amp;lsquo;var1&amp;rsquo; of integer type to accept a number from users. Its body part fetches the records from the table using a SELECT statement and returns only those rows that will be supplied by the user. It also returns the total number of rows of the specified table.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELIMITER &amp;amp;&amp;amp;  
CREATE PROCEDURE get_employee (IN var1 INT)  
BEGIN  
    SELECT * FROM employee LIMIT var1;  
    SELECT COUNT(ID) AS Total_employee FROM employee;    
END &amp;amp;&amp;amp;  
DELIMITER ;  
CALL get_employee(2);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/proce-in.png&#34; alt=&#34;image case&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Output using sql-command-line :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/in-proce.png&#34; alt=&#34;image case&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h4 id=&#34;procedures-with-out-parameter&#34;&gt;Procedures with OUT Parameter&lt;/h4&gt;
&lt;p&gt;In this procedure, we have used the OUT parameter as the &lt;strong&gt;highestsalary&lt;/strong&gt; of integer type. Its body part fetches the maximum salary from the table using a MAX() function.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELIMITER &amp;amp;&amp;amp;  
CREATE PROCEDURE display_max_salary (OUT highestsalary INT)  
BEGIN  
    SELECT MAX(salary) INTO highestsalary FROM employee;   
END &amp;amp;&amp;amp;  
DELIMITER ;

call display_max_salary(@M);
select @M;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/proc-out.png&#34; alt=&#34;image display_max_salary&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;procedures-with-inout-parameter&#34;&gt;Procedures with INOUT Parameter&lt;/h4&gt;
&lt;p&gt;In this procedure, we have used the INOUT parameter as &amp;lsquo;var1&amp;rsquo; of integer type. Its body part first fetches the marks from the table with the specified id and then stores it into the same variable var1. The var1 first acts as the IN parameter and then OUT parameter. Therefore, we can call it the INOUT parameter mode.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELIMITER &amp;amp;&amp;amp;  
CREATE PROCEDURE display_salary (INOUT var1 INT)  
BEGIN  
    SELECT salary INTO var1 FROM employee WHERE ID = var1;   
END &amp;amp;&amp;amp;  
DELIMITER ;  

SET @M = &amp;#39;5&amp;#39;;  
CALL display_salary(@M);  
SELECT @M;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Inout-proce.png&#34; alt=&#34;image display_salary&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;alter-procedure&#34;&gt;ALTER PROCEDURE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This statement can be used to change the characteristics of a stored procedure. More than one change may be specified in an ALTER PROCEDURE statement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;However, you cannot change the parameters or body of a stored procedure using this statement; to make such changes, you must drop and re-create the procedure using DROP PROCEDURE and CREATE PROCEDURE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You must have the ALTER ROUTINE privilege for the procedure.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER PROCEDURE display_salary
COMMENT &amp;#39;display_employee_salary&amp;#39;;

SHOW PROCEDURE STATUS;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/proce-alter.png&#34; alt=&#34;image alter-proce&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;drop-procedure&#34;&gt;DROP PROCEDURE&lt;/h2&gt;
&lt;p&gt;This statement is used to drop a stored procedure or function. That is, the specified routine is removed from the server. You must have the ALTER ROUTINE privilege for the routine.&lt;/p&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP PROCEDURE display_salary;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-proce.png&#34; alt=&#34;image drop-proce&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql-trigger&#34;&gt;MySqL Trigger&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A MySQL trigger is a special type of stored procedure that is executed in response to certain action on the table e.g. insertion, deletion or updation of data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This command is a named database object which is associated with a defined table and is executed automatically whenever the defined trigger events take place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The MySQL trigger is a database object that is associated with a table. The trigger is invoked automatically whenever any action such as INSERT, UPDATE, or DELETE is performed on that table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Create&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;database&lt;/span&gt; triggers; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use triggers;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;show&lt;/span&gt; tables;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;before-insert-trigger&#34;&gt;Before Insert Trigger&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Before Insert Trigger in MySQL is invoked automatically whenever an insert operation is executed. In this article, we are going to learn how to create a before insert trigger with its  example.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;customers&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; customers (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      cus_id INT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      age INT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named customers with columns cus_id, age, and name.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Delimiter Change for Trigger:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement changes the delimiter to &lt;code&gt;//&lt;/code&gt;. This is done because the trigger definition contains semicolons, and changing the delimiter prevents conflicts.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Trigger &lt;code&gt;age_verify&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRIGGER&lt;/span&gt; age_verify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEFORE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; customers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.age &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt;;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This trigger (age_verify) is set to execute before each insert operation on the customers table. It checks if the age being inserted is less than 0 and, if so, sets it to 0.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Reset Delimiter:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This resets the delimiter back to the default semicolon.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Insert Data into &lt;code&gt;customers&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; customers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;James&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Army&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ben&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Angela&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement inserts data into the customers table.&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;strong&gt;Select Data from &lt;code&gt;customers&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; customers;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement selects and displays all records from the customers table.&lt;/p&gt;
&lt;h2 id=&#34;after-insert-trigger&#34;&gt;After Insert Trigger&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After Insert Trigger in MySQL is invoked automatically whenever an insert event occurs on the table. In this article, we are going to learn how to create an after insert trigger with its  example.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;customers1&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; customers1 (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       id INT AUTO_INCREMENT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       email VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       birthdate DATE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named customers1 with columns id (auto-incremented primary key), name (not nullable), email, and birthdate.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;message&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; message (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       id INT AUTO_INCREMENT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       messageid INT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       message VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;(id, messageid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named message with columns id (auto-incremented), messageid, and message. The combination of id and messageid forms the primary key.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Trigger &lt;code&gt;check_null_dob&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRIGGER&lt;/span&gt; check_null_dob
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;AFTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; customers1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.birthdate &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; message (messageId, message)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.id, CONCAT(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hi&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.name, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. Please update your date of birth.&amp;#39;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This trigger (check_null_dob) is set to execute after each insertion into the customers1 table. It checks if the birthdate for the newly inserted row is NULL. If so, it inserts a message into the message table, prompting the user to update their date of birth.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Insert Data into &lt;code&gt;customers1&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; customers1 (name, email, birthdate)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nancy&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nancy@abc.com&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ronald&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ronald@xyz.com&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1998-12-16&amp;#34;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chris&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chris@xyz.com&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1997-08-20&amp;#34;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alice&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alice@anc.com&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement inserts data into the customers1 table, including NULL values for birthdate.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Select Data from &lt;code&gt;message&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; message;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement retrieves all records from the message table, which should contain messages for customers with NULL birthdates.&lt;/p&gt;
&lt;h2 id=&#34;before-update-trigger&#34;&gt;Before Update Trigger&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BEFORE UPDATE Trigger in MySQL is invoked automatically whenever an update operation is fired on the table associated with the trigger. In this article, we are going to learn how to create a before update trigger with its  example.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;employees&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; employees (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       emp_id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       emp_name VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       age INT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       salary FLOAT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named employees with columns emp_id (primary key), emp_name, age, and salary.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Insert Data into &lt;code&gt;employees&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; employees (emp_id, emp_name, age, salary) &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;John Doe&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Jane Smith&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bob Johnson&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;75000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Alice Brown&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;55000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Charlie Wilson&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;80000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Eva Davis&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Frank White&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;90000&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement inserts data into the employees table.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Delimiter Change for Trigger:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement changes the delimiter to &lt;code&gt;//&lt;/code&gt;. This is done because the trigger definition contains semicolons, and changing the delimiter prevents conflicts.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Trigger &lt;code&gt;upd_trigger&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRIGGER&lt;/span&gt; upd_trigger
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEFORE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; employees
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.salary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.salary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;85000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ELSEIF &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.salary &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;THEN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt;.salary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;72000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This trigger (&lt;code&gt;upd_trigger&lt;/code&gt;) is set to execute before each update on the employees table. It checks if the new salary is 10000, and if so, it sets it to 85000. If the new salary is less than 10000, it sets it to 72000.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Reset Delimiter:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This resets the delimiter back to the default semicolon.&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;strong&gt;Disable Safe Updates:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; SQL_SAFE_UPDATES &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement disables safe updates, allowing you to perform updates without a WHERE clause (useful for the next update statement).&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;strong&gt;Update Salary:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; employees &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; salary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement attempts to update the salary to 8000 for all employees. The trigger will modify salaries according to the conditions specified.&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;&lt;strong&gt;Select Data from &lt;code&gt;employees&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; triggers.employees;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement selects and displays all records from the &lt;code&gt;employees&lt;/code&gt; table.&lt;/p&gt;
&lt;h2 id=&#34;before-delete-trigger&#34;&gt;Before Delete Trigger&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BEFORE DELETE Trigger in MySQL is invoked automatically whenever a delete operation is fired on the table. In this article, we are going to learn how to create a before delete trigger with its  example.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;salary&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; salary (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       eid INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       validfrom DATE &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       amount FLOAT &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named salary with columns eid (primary key), validfrom (not nullable date), and amount (not nullable float).&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Insert Data into &lt;code&gt;salary&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; salary (eid, validfrom, amount)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2005-05-01&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;55000&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2007-05-01&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;59000&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2006-05-01&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement inserts data into the &lt;code&gt;salary&lt;/code&gt; table.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Select Data from &lt;code&gt;salary&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; triggers.salary;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement selects and displays all records from the &lt;code&gt;salary&lt;/code&gt; table.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Table &lt;code&gt;salarydel&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; salarydel (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       id INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       eid INT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       validfrom DATE &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       amount FLOAT &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       deletedat &lt;span style=&#34;color:#66d9ef&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; NOW()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement creates a table named &lt;code&gt;salarydel&lt;/code&gt; to store deleted records from the &lt;code&gt;salary&lt;/code&gt; table. It includes a &lt;code&gt;deletedat&lt;/code&gt; column with a default value of the current timestamp.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Delimiter Change for Trigger:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement changes the delimiter to &lt;code&gt;$$&lt;/code&gt;. This is done because the trigger definition contains semicolons, and changing the delimiter prevents conflicts.&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create Trigger &lt;code&gt;salary_delete&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRIGGER&lt;/span&gt; salary_delete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEFORE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; salary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EACH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ROW&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; salarydel (eid, validfrom, amount)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;OLD&lt;/span&gt;.eid, &lt;span style=&#34;color:#66d9ef&#34;&gt;OLD&lt;/span&gt;.validfrom, &lt;span style=&#34;color:#66d9ef&#34;&gt;OLD&lt;/span&gt;.amount);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This trigger (&lt;code&gt;salary_delete&lt;/code&gt;) is set to execute before each delete operation on the &lt;code&gt;salary&lt;/code&gt; table. It inserts a record into the &lt;code&gt;salarydel&lt;/code&gt; table before deleting the corresponding record from &lt;code&gt;salary&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;strong&gt;Reset Delimiter:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELIMITER&lt;/span&gt; ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This resets the delimiter back to the default semicolon.&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;&lt;strong&gt;Delete Data from &lt;code&gt;salary&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; salary &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; eid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement deletes the record with eid equal to 101 from the &lt;code&gt;salary&lt;/code&gt; table. The trigger will insert a record into the &lt;code&gt;salarydel&lt;/code&gt; table before the actual deletion.&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;&lt;strong&gt;Select Data from &lt;code&gt;salarydel&lt;/code&gt;:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; triggers.salarydel;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This statement selects and displays all records from the &lt;code&gt;salarydel&lt;/code&gt; table, which should now include the deleted record from the &lt;code&gt;salary&lt;/code&gt; table.&lt;/p&gt;
&lt;h1 id=&#34;mysql-index&#34;&gt;MySQL INDEX&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Indexes are used to retrieve data from the database more quickly than otherwise. The users cannot see the indexes, they are just used to speed up searches/queries.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE INDEX index_name
ON table_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Syntax for unique index:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE UNIQUE INDEX index_name
ON table_name (column1, column2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE INDEX idx_ename
ON employee (LastName, FirstName);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/index.png&#34; alt=&#34;image index&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;drop-index&#34;&gt;Drop Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The DROP INDEX statement is used to delete an index in a table.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE table_name
DROP INDEX index_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE employee
DROP INDEX idx_ename;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/drop-index.png&#34; alt=&#34;image drop-index&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;mysql-cursors&#34;&gt;MySQL CURSORS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A database cursor is a control structure that enables traversal over the records in a database. Cursors are used by database programmers to process individual rows returned by database system queries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cursors enable manipulation of whole result sets at once. In this scenario, a cursor enables the rows in a result set to be processed sequentially.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In SQL procedures, a cursor makes it possible to define a result set (a set of data rows) and perform complex logic on a row by row basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL supports cursors inside stored programs. The syntax is as in embedded SQL. Cursors have these properties&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Asensitive: The server may or may not make a copy of its result table&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read only: Not updatable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nonscrollable: Can be traversed only in one direction and cannot skip rows&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;To use cursors in MySQL procedures, you need to do the following:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Declare a cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fetch the data into variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close the cursor when done.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cursor-procedure&#34;&gt;CURSOR PROCEDURE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Declare Cursor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following statement declares a cursor and associates it with a SELECT statement that retrieves the rows to be traversed by the cursor.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DECLARE cursor_name CURSOR FOR  
Select statement;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Open Cursor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After declaring the cursor the next step is to open the cursor using open statement.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Open cursor_name; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Fetch Cursor&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;After declaring and opening the cursor, the next step is to fetch the cursor. It is used to fetch the row or the column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This statement fetches the next row for the SELECT statement associated with the specified cursor (which must be open) and advances the cursor pointer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a row exists, the fetched columns are stored in the named variables. The number of columns retrieved by the SELECT statement must match the number of output variables specified in the FETCH statement.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FETCH [ NEXT [ FROM ] ] cursor_name INTO variable_list; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Close Cursor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This statement closes a previously opened cursor. An error occurs if the cursor is not open.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Close cursor_name; 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;delimiter $$
create procedure spCursor()
begin
	declare v_name varchar(20);
    declare salary INT;
    declare flag int default 0;
    declare sample cursor for select FirstName,salary from employee where ID=6;
    declare continue handler for NOT FOUND set flag = 1;
    open sample;
    getEmp : loop
		fetch sample into v_name,salary;
        if flag=1 then
			leave getEmp;
		end if;
        select concat(v_name,salary);
	end loop getEmp;
    close sample;
end$$

delimiter ;

call spCursor();

Set @a=6;
Call spCursor(@a);
Select @a;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/cursor.png&#34; alt=&#34;image cursor&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;mysql-functions&#34;&gt;MySQL Functions&lt;/h1&gt;
&lt;p&gt;Functions in SQL Server are the database objects that contains a set of SQL statements to perform a specific task. A function accepts input parameters, perform actions, and then return the result.&lt;/p&gt;
&lt;p&gt;Different types of sql server functions are as follows&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#string-functions&#34;&gt;String Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#numeric-functions&#34;&gt;Number Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#date-functions&#34;&gt;Date Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#control-flow-function&#34;&gt;Control Flow Functions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;string-functions&#34;&gt;String Functions&lt;/h2&gt;
&lt;p&gt;SQL string functions are used primarily for string manipulation.&lt;/p&gt;
&lt;p&gt;The following table listed each of the functions with a brief description:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#ascii&#34;&gt;ASCII&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the ASCII value for the specific character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#char-length&#34;&gt;CHAR_LENGTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the length of a string (in characters)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#character-length&#34;&gt;CHARACTER_LENGTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the length of a string (in characters)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#concat&#34;&gt;CONCAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds two or more expressions together&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#concat-ws&#34;&gt;CONCAT_WS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds two or more expressions together with a separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#field&#34;&gt;FIELD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the index position of a value in a list of values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#find-in-set&#34;&gt;FIND_IN_SET&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the position of a string within a list of strings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#format&#34;&gt;FORMAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Formats a number to a format like &amp;ldquo;#,###,###.##&amp;rdquo;, rounded to a specified number of decimal places&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#insert&#34;&gt;INSERT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Inserts a string within a string at the specified position and for a certain number of characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#instr&#34;&gt;INSTR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the position of the first occurrence of a string in another string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#lcase&#34;&gt;LCASE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Converts a string to lower-case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#left&#34;&gt;LEFT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a number of characters from a string (starting from left)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#length&#34;&gt;LENGTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the length of a string (in bytes)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#locate&#34;&gt;LOCATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the position of the first occurrence of a substring in a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#lcase&#34;&gt;LOWER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Converts a string to lower-case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#lpad&#34;&gt;LPAD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Left-pads a string with another string, to a certain length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#ltrim&#34;&gt;LTRIM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Removes leading spaces from a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#mid&#34;&gt;MID&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a substring from a string (starting at any position)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#position&#34;&gt;POSITION&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the position of the first occurrence of a substring in a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#repeat&#34;&gt;REPEAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Repeats a string as many times as specified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#replace&#34;&gt;REPLACE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Replaces all occurrences of a substring within a string, with a new substring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#reverse&#34;&gt;REVERSE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Reverses a string and returns the result&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#right&#34;&gt;RIGHT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a number of characters from a string (starting from right)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#rpad&#34;&gt;RPAD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Right-pads a string with another string, to a certain length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#rtrim&#34;&gt;RTRIM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Removes trailing spaces from a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#space&#34;&gt;SPACE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a string of the specified number of space characters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#strcmp&#34;&gt;STRCMP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Compares two strings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#substr&#34;&gt;SUBSTR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a substring from a string (starting at any position)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#substr&#34;&gt;SUBSTRING&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a substring from a string (starting at any position)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#substring-index&#34;&gt;SUBSTRING_INDEX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a substring of a string before a specified number of delimiter occurs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#ucase&#34;&gt;UCASE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Converts a string to upper-case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#ucase&#34;&gt;UPPER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Converts a string to upper-case&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;ascii&#34;&gt;ASCII&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The ASCII() function returns the ASCII value for the specific character.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ASCII(character)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName, ASCII(FirstName) AS NumCodeOfFirstChar
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Ascii.png&#34; alt=&#34;image AscII &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;char-length&#34;&gt;CHAR-LENGTH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CHAR_LENGTH() function return the length of a string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CHAR_LENGTH(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,CHAR_LENGTH(FirstName) AS LengthOfName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/carlen.png&#34; alt=&#34;image charleng &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;character-length&#34;&gt;CHARACTER-LENGTH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CHARACTER_LENGTH() function return the length of a string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CHARACTER_LENGTH(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
SELECT LastName, CHARACTER_LENGTH(LastName) AS LengthOfName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Charater-length.png&#34; alt=&#34;image charlength &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;concat&#34;&gt;CONCAT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CONCAT() function adds two or more expressions together.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
CONCAT(expression1, expression2, expression3,...)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LastName, CONCAT(FirstName, &amp;#34; &amp;#34;, LastName) AS FullName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/concat.png&#34; alt=&#34;image CONCAT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;concat-ws&#34;&gt;CONCAT WS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CONCAT_WS() function adds two or more expressions together with a separator.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CONCAT_WS(separator, expression1, expression2, expression3,...)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
SELECT FirstName,LastName, CONCAT_WS(&amp;#34; &amp;#34;, FirstName, LastName) AS Address
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/concatws.png&#34; alt=&#34;image concatws &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;field&#34;&gt;FIELD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The FIELD() function returns the index position of a value in a list of values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This function performs a case-insensitive search.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FIELD(value, val1, val2, val3, ...)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FIELD(&amp;#34;Q&amp;#34;, &amp;#34;s&amp;#34;, &amp;#34;q&amp;#34;, &amp;#34;l&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/field.png&#34; alt=&#34;image FIELD &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;find-in-set&#34;&gt;FIND IN SET&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The FIND_IN_SET() function returns the position of a string within a list of strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FIND_IN_SET(string, string_list)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FIND_IN_SET(&amp;#34;q&amp;#34;, &amp;#34;s,q,l&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/field_ser.png&#34; alt=&#34;image FIELD &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;format&#34;&gt;FORMAT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The FORMAT() function formats a number to a format like &amp;ldquo;#,###,###.##&amp;rdquo;, rounded to a specified number of decimal places, then it returns the result as a string.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FORMAT(number, decimal_places)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FORMAT(25045500.5634, 0);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/format.png&#34; alt=&#34;image FORMAT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;insert&#34;&gt;INSERT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The INSERT() function inserts a string within a string at the specified position and for a certain number of characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT(string, position, number, string2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT INSERT(&amp;#34;google.com&amp;#34;, 8, 3, &amp;#34;no&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/insert-goo.png&#34; alt=&#34;image INSERT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;instr&#34;&gt;INSTR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The INSTR() function returns the position of the first occurrence of a string in another string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This function performs a case-insensitive search.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSTR(string1, string2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName, INSTR(FirstName, &amp;#34;a&amp;#34;)
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Inter.png&#34; alt=&#34;image INSTR &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lcase&#34;&gt;LCASE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LCASE() function converts a string to lower-case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LCASE(text)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LCASE(FirstName) AS LowercaseFirstName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Lcase.png&#34; alt=&#34;image LCASE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;left&#34;&gt;LEFT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LEFT() function extracts a number of characters from a string (starting from left).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LEFT(string, number_of_chars)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LEFT(FirstName, 5) AS ExtractString
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/left.png&#34; alt=&#34;image LEFT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;length&#34;&gt;LENGTH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LENGTH() function returns the length of a string (in bytes).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LENGTH(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LENGTH(FirstName) AS LengthOfName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/length.png&#34; alt=&#34;image length &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;locate&#34;&gt;LOCATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The LOCATE() function returns the position of the first occurrence of a substring in a string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the substring is not found within the original string, this function returns 0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This function performs a case-insensitive search.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LOCATE(substring, string, start)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LOCATE(&amp;#34;a&amp;#34;, FirstName)
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/locate.png&#34; alt=&#34;image locate &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lpad&#34;&gt;LPAD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LPAD() function left-pads a string with another string, to a certain length.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LPAD(string, length, lpad_string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LPAD(FirstName, 30, &amp;#34;ABC&amp;#34;) AS LeftPadFirstName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/LPad.png&#34; alt=&#34;image LPAD &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ltrim&#34;&gt;LTRIM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LTRIM() function removes leading spaces from a string.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LTRIM(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LTRIM(&amp;#34;FirstName&amp;#34;) AS LeftTrimmedString;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/ltrim.png&#34; alt=&#34;image LTRIM &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mid&#34;&gt;MID&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MID() function extracts a substring from a string (starting at any position).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MID(string, start, length)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,MID(FirstName, 2, 5) AS ExtractString
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/mid.png&#34; alt=&#34;image MID &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;position&#34;&gt;POSITION&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The POSITION() function returns the position of the first occurrence of a substring in a string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the substring is not found within the original string, this function returns 0.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POSITION(substring IN string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,POSITION(&amp;#34;a&amp;#34; IN FirstName)
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/position.png&#34; alt=&#34;image POSITION &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;repeat&#34;&gt;REPEAT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The REPEAT() function repeats a string as many times as specified.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REPEAT(string, number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,REPEAT(FirstName, 2)
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/repeat.png&#34; alt=&#34;image REPEAT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;replace&#34;&gt;REPLACE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The REPLACE() function replaces all occurrences of a substring within a string, with a new substring.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REPLACE(string, substring, new_string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,REPLACE(FirstName, &amp;#34;a&amp;#34;, &amp;#34;m&amp;#34;) from employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Replace.png&#34; alt=&#34;image REPLACE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;reverse&#34;&gt;REVERSE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The REVERSE() function reverses a string and returns the result&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REVERSE(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,REVERSE(FirstName) from employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/reverse.png&#34; alt=&#34;image REVERSE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;right&#34;&gt;RIGHT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The RIGHT() function extracts a number of characters from a string (starting from right).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RIGHT(string, number_of_chars)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName, RIGHT(FirstName, 5) AS ExtractString
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/right.png&#34; alt=&#34;image RIGHT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;rpad&#34;&gt;RPAD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The RPAD() function right-pads a string with another string, to a certain length.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RPAD(string, length, rpad_string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,RPAD(FirstName, 30, &amp;#34;ABC&amp;#34;) AS RightPadFirstName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Rpad.png&#34; alt=&#34;image RPAD &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;rtrim&#34;&gt;RTRIM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The RTRIM() function removes trailing spaces from a string&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RTRIM(string)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
SELECT firstname,RTRIM(firstname) AS RightTrimmedString from employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/rtrim.png&#34; alt=&#34;image RTRIM &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;space&#34;&gt;SPACE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SPACE() function returns a string of the specified number of space characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SPACE(number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SPACE(10);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/space.png&#34; alt=&#34;image SPACE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;strcmp&#34;&gt;STRCMP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The STRCMP() function compares two strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;STRCMP(string1, string2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,LastName,STRCMP(FirstName, LastName) from employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/strcom.png&#34; alt=&#34;image STRCMP &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;substr&#34;&gt;SUBSTR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUBSTR() function extracts a substring from a string (starting at any position).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBSTR(string, start, length)

or

SUBSTR(string FROM start FOR length)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,SUBSTR(FirstName, 2, 5) AS ExtractString
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/substr.png&#34; alt=&#34;image SUBSTR &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;substring-index&#34;&gt;SUBSTRING INDEX&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUBSTRING_INDEX() function returns a substring of a string before a specified number of delimiter occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBSTRING_INDEX(string, delimiter, number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LastName,SUBSTRING_INDEX(LastName, &amp;#34;.&amp;#34;, 1) AS ExtractString
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/sub-index.png&#34; alt=&#34;image SUBSTRING_INDEX &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ucase&#34;&gt;UCASE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The UCASE() function converts a string to upper-case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UCASE(text)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,UCASE(FirstName) AS UppercaseFirstName
FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/ucase.png&#34; alt=&#34;image UCASE &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;numeric-functions&#34;&gt;NUMERIC FUNCTIONS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQL numeric functions are used primarily for numeric manipulation and/or mathematical calculations&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#avg&#34;&gt;AVG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the average value of an expression&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#ceil&#34;&gt;CEIL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the smallest integer value that is &amp;gt;= to a number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#count&#34;&gt;COUNT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the number of records returned by a select query&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#floor&#34;&gt;FLOOR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the largest integer value that is &amp;lt;= to a number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#greatest&#34;&gt;GREATEST&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the greatest value of the list of arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#max&#34;&gt;MAX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the maximum value in a set of values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#min&#34;&gt;MIN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the minimum value in a set of values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#power&#34;&gt;POWER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the value of a number raised to the power of another number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#sum&#34;&gt;SUM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Calculates the sum of a set of values&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;avg&#34;&gt;AVG&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The AVG() function returns the average value of an expression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AVG(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM employee
WHERE salary &amp;gt; (SELECT AVG(salary) FROM employee);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/avg.png&#34; alt=&#34;image AVG &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ceil&#34;&gt;CEIL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CEIL() function returns the smallest integer value that is bigger than or equal to a number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CEIL(number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,salary/0.3,CEIL(salary/0.3) FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/ceil.png&#34; alt=&#34;image Ceil &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;count&#34;&gt;COUNT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The COUNT() function returns the number of records returned by a select query&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;COUNT(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT COUNT(ID) AS NumberOfEmployees FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/count.png&#34; alt=&#34;image count &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;floor&#34;&gt;FLOOR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The FLOOR() function returns the largest integer value that is smaller than or equal to a number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FLOOR(number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,salary/0.3,FLOOR(salary/0.3) FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/floor.png&#34; alt=&#34;image floor &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;greatest&#34;&gt;GREATEST&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The GREATEST() function returns the greatest value of the list of arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GREATEST(arg1, arg2, arg3, ...)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT GREATEST(10,20,-5,-1.6,9);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/greater.png&#34; alt=&#34;image greatest &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;max&#34;&gt;MAX&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MAX() function returns the maximum value in a set of values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MAX(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT max(salary) AS HigestPay FROM employee
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/max.png&#34; alt=&#34;image max &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;min&#34;&gt;min&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MIN() function returns the minimum value in a set of values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MIN(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT min(salary) AS AveragePay FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/min.png&#34; alt=&#34;image min &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;power&#34;&gt;POWER&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The POWER() function returns the value of a number raised to the power of another number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POWER(x, y)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName,salary,POW(salary,2) FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/power.png&#34; alt=&#34;image power &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sum&#34;&gt;SUM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUM() function calculates the sum of a set of values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUM(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT sum(salary) AS EmployeeSalary FROM employee;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/sum.png&#34; alt=&#34;image sum &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;date-functions&#34;&gt;Date Functions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#adddate&#34;&gt;ADDDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds a time/date interval to a date and then returns the date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#addtime&#34;&gt;ADDTIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds a time interval to a time/datetime and then returns the time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#current-date&#34;&gt;CURDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#current-date&#34;&gt;CURRENT_DATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#current-time&#34;&gt;CURRENT_TIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#current-timestamp&#34;&gt;CURRENT_TIMESTAMP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date and time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#current-time&#34;&gt;CURTIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#date&#34;&gt;DATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts the date part from a datetime expression&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#datediff&#34;&gt;DATEDIFF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the number of days between two date values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#adddate&#34;&gt;DATE_ADD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds a time/date interval to a date and then returns the date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#date-format&#34;&gt;DATE_FORMAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Formats a date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#date-sub&#34;&gt;DATE_SUB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Subtracts a time/date interval from a date and then returns the date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day&#34;&gt;DAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the day of the month for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#dayname&#34;&gt;DAYNAME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the weekday name for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#dayofmonth&#34;&gt;DAYOFMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the day of the month for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#dayofweek&#34;&gt;DAYOFWEEK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the weekday index for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#dayofyear&#34;&gt;DAYOFYEAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the day of the year for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#extract&#34;&gt;EXTRACT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts a part from a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#from-days&#34;&gt;FROM_DAYS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a date from a numeric datevalue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#hour&#34;&gt;HOUR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the hour part for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#last-day&#34;&gt;LAST_DAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts the last day of the month for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#localtime&#34;&gt;LOCALTIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date and time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#localtime&#34;&gt;LOCALTIMESTAMP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date and time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#makedate&#34;&gt;MAKEDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Creates and returns a date based on a year and a number of days value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#maketime&#34;&gt;MAKETIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Creates and returns a time based on an hour, minute, and second value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#microsecond&#34;&gt;MICROSECOND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the microsecond part of a time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#minute&#34;&gt;MINUTE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the minute part of a time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#month&#34;&gt;MONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the month part for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#monthname&#34;&gt;MONTHNAME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the name of the month for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#now&#34;&gt;NOW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date and time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#period-add&#34;&gt;PERIOD_ADD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds a specified number of months to a period&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#period-diff&#34;&gt;PERIOD_DIFF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the difference between two periods&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#quarter&#34;&gt;QUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the quarter of the year for a given date value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#second&#34;&gt;SECOND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the seconds part of a time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#sec-to-time&#34;&gt;SEC_TO_TIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a time value based on the specified seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#str-to-date&#34;&gt;STR_TO_DATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a date based on a string and a format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#subdate&#34;&gt;SUBDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Subtracts a time/date interval from a date and then returns the date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#subtime&#34;&gt;SUBTIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Subtracts a time interval from a datetime and then returns the time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#sysdate&#34;&gt;SYSDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the current date and time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#time&#34;&gt;TIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Extracts the time part from a given time/datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#time-format&#34;&gt;TIME_FORMAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Formats a time by a specified format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#time-to-sec&#34;&gt;TIME_TO_SEC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Converts a time value into seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#timediff&#34;&gt;TIMEDIFF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the difference between two time/datetime expressions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#timestamp&#34;&gt;TIMESTAMP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns a datetime value based on a date or datetime value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#to-days&#34;&gt;TO_DAYS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the number of days between a date and date &amp;ldquo;0000-00-00&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#week&#34;&gt;WEEK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the week number for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#weekday&#34;&gt;WEEKDAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the weekday number for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#weekofyear&#34;&gt;WEEKOFYEAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the week number for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#year&#34;&gt;YEAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the year part for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#yearweek&#34;&gt;YEARWEEK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Returns the year and week number for a given date&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;adddate&#34;&gt;ADDDATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The ADDDATE() function adds a time/date interval to a date and then returns the date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ADDDATE(date, INTERVAL value addunit)

or

ADDDATE(date, days)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT ADDDATE(&amp;#34;2023-04-15 09:34:21&amp;#34;, INTERVAL 15 MINUTE);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/adddate.png&#34; alt=&#34;image AddDate &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;addtime&#34;&gt;ADDTIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The ADDTIME() function adds a time interval to a time/datetime and then returns the time/datetime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ADDTIME(datetime, addtime)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT ADDTIME(&amp;#34;2023-04-15 09:34:21&amp;#34;, &amp;#34;2&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/addtime.png&#34; alt=&#34;image ADDTIME &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;current-date&#34;&gt;CURRENT DATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CURRENT_DATE() function returns the current date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CURRENT_DATE()

or

SELECT CURDATE();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT CURRENT_DATE();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/current-date.png&#34; alt=&#34;image Current-date &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;current-time&#34;&gt;CURRENT TIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CURRENT_TIME() function returns the current time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CURRENT_TIME();

or

CURTIME();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT CURTIME();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/current-time.png&#34; alt=&#34;image Current-time &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;current-timestamp&#34;&gt;CURRENT TIMESTAMP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The CURRENT_TIMESTAMP() function returns the current date and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CURRENT_TIMESTAMP()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT CURRENT_TIMESTAMP();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/current-timestamp.png&#34; alt=&#34;image Current-timestamp &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;date&#34;&gt;DATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DATE() function extracts the date part from a datetime expression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DATE(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DATE(&amp;#34;2023-04-20&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/date.png&#34; alt=&#34;image Date &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;datediff&#34;&gt;DATEDIFF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DATEDIFF() function returns the number of days between two date values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DATEDIFF(date1, date2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DATEDIFF(&amp;#34;2023-04-20&amp;#34;, &amp;#34;2023-04-15&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Datediff.png&#34; alt=&#34;image DATEDIFF &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;date-format&#34;&gt;DATE FORMAT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DATE_FORMAT() function formats a date as specified.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DATE_FORMAT(date, format)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DATE_FORMAT(&amp;#34;2023-04-20&amp;#34;, &amp;#34;%Y&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Date-format.png&#34; alt=&#34;image DATE_FORMAT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;date-sub&#34;&gt;DATE SUB&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DATE_SUB() function subtracts a time/date interval from a date and then returns the date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DATE_SUB(date, INTERVAL value interval)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DATE_SUB(&amp;#34;2023-04-20&amp;#34;, INTERVAL 10 DAY);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Date-sub.png&#34; alt=&#34;image DATE_SUB &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;day&#34;&gt;DAY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DAY() function returns the day of the month for a given date (a number from 1 to 31).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DAY(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DAY(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/day.png&#34; alt=&#34;image DAY &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dayname&#34;&gt;DAYNAME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DAYNAME() function returns the weekday name for a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DAYNAME(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DAYNAME(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/dayname.png&#34; alt=&#34;image DAYNAME &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dayofmonth&#34;&gt;DAYOFMONTH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DAYOFMONTH() function returns the day of the month for a given date (a number from 1 to 31).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DAYOFMONTH(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DAYOFMONTH(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/dayofmonth.png&#34; alt=&#34;image DAYOFMONTH &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dayofweek&#34;&gt;DAYOFWEEK&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DAYOFWEEK() function returns the weekday index for a given date (a number from 1 to 7).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DAYOFWEEK(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DAYOFWEEK(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Dayofweek.png&#34; alt=&#34;image DAYOFWEEK &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dayofyear&#34;&gt;DAYOFYEAR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The DAYOFYEAR() function returns the day of the year for a given date (a number from 1 to 366).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DAYOFYEAR(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DAYOFYEAR(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/dayofyear.png&#34; alt=&#34;image DAYOFYEAR &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;extract&#34;&gt;EXTRACT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The EXTRACT() function extracts a part from a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;EXTRACT(part FROM date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT EXTRACT(YEAR_MONTH FROM &amp;#34;2023-04-20 09:34:21&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/extract.png&#34; alt=&#34;image EXTRACT &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;from-days&#34;&gt;FROM DAYS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The FROM_DAYS() function returns a date from a numeric datevalue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The FROM_DAYS() function is to be used only with dates within the Gregorian calendar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM_DAYS(number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FROM_DAYS(880800);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/from-day.png&#34; alt=&#34;image FROM_DAYS &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hour&#34;&gt;HOUR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The HOUR() function returns the hour part for a given date (from 0 to 838).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HOUR(datetime)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT HOUR(&amp;#34;737:59:59&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/hour.png&#34; alt=&#34;image HOUR &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;last-day&#34;&gt;LAST DAY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LAST_DAY() function extracts the last day of the month for a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LAST_DAY(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LAST_DAY(&amp;#34;2023-04-20 09:34:00&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/last-day.png&#34; alt=&#34;image LAST_DAY &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;localtime&#34;&gt;LOCALTIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The LOCALTIME() function returns the current date and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LOCALTIME()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LOCALTIME();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/local-time.png&#34; alt=&#34;image LOCALTIME &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;makedate&#34;&gt;MAKEDATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MAKEDATE() function creates and returns a date based on a year and a number of days value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MAKEDATE(year, day)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MAKEDATE(2023, 175);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Makedate.png&#34; alt=&#34;image MAKEDATE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;maketime&#34;&gt;MAKETIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MAKETIME() function creates and returns a time based on an hour, minute, and second value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MAKETIME(hour, minute, second)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MAKETIME(16, 1, 0);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/maketime.png&#34; alt=&#34;image MAKETIME &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;microsecond&#34;&gt;MICROSECOND&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MICROSECOND() function returns the microsecond part of a time/datetime (from 0 to 999999).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MICROSECOND(datetime)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MICROSECOND(&amp;#34;23:59:59.000045&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/microsecond.png&#34; alt=&#34;image MICROSECOND &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;minute&#34;&gt;MINUTE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MINUTE() function returns the minute part of a time/datetime (from 0 to 59).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MINUTE(datetime)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MINUTE(&amp;#34;23:59:59&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/minute.png&#34; alt=&#34;image MINUTE &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;month&#34;&gt;MONTH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MONTH() function returns the month part for a given date (a number from 1 to 12).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MONTH(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MONTH(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/month.png&#34; alt=&#34;image MONTH &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;monthname&#34;&gt;MONTHNAME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The MONTHNAME() function returns the name of the month for a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MONTHNAME(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MONTHNAME(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/monthname.png&#34; alt=&#34;image MONTHNAME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;now&#34;&gt;NOW&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The NOW() function returns the current date and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NOW()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT NOW();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/now.png&#34; alt=&#34;image NOW&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;period-add&#34;&gt;PERIOD ADD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The PERIOD_ADD() function adds a specified number of months to a period.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The PERIOD_ADD() function will return the result formatted as YYYYMM.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PERIOD_ADD(period, number)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT PERIOD_ADD(202304, 20);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/period-add.png&#34; alt=&#34;image PERIOD_ADD&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;period-diff&#34;&gt;PERIOD DIFF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The PERIOD_DIFF() function returns the difference between two periods. The result will be in months.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PERIOD_DIFF(period1, period2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT PERIOD_DIFF(202303, 202503);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/period-diff.png&#34; alt=&#34;image PERIOD_DIFF&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;quarter&#34;&gt;QUARTER&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The QUARTER() function returns the quarter of the year for a given date value (a number from 1 to 4).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;QUARTER(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT QUARTER(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/quarter.png&#34; alt=&#34;image QUARTER&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;second&#34;&gt;SECOND&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SECOND() function returns the seconds part of a time/datetime (from 0 to 59).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SECOND(datetime)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SECOND(&amp;#34;23:59:59&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/second.png&#34; alt=&#34;image SECOND&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sec-to-time&#34;&gt;SEC TO TIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SEC_TO_TIME() function returns a time value (in format HH:MM:SS) based on the specified seconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SEC_TO_TIME(seconds)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SEC_TO_TIME(-6897);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/sec-to-time.png&#34; alt=&#34;image SEC_TO_TIME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;str-to-date&#34;&gt;STR TO DATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The STR_TO_DATE() function returns a date based on a string and a format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;STR_TO_DATE(string, format)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT STR_TO_DATE(&amp;#34;April 20 2023&amp;#34;, &amp;#34;%M %d %Y&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/STR-TO-DATE.png&#34; alt=&#34;image STR_TO_DATE&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;subdate&#34;&gt;SUBDATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUBDATE() function subtracts a time/date interval from a date and then returns the date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBDATE(date, INTERVAL value unit)

or

SUBDATE(date, days)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT STR_TO_DATE(&amp;#34;April 20 2023&amp;#34;, &amp;#34;%M %d %Y&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/STR-TO-DATE.png&#34; alt=&#34;image STR_TO_DATE&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;subdate-1&#34;&gt;SUBDATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUBDATE() function subtracts a time/date interval from a date and then returns the date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBDATE(date, INTERVAL value unit)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUBDATE(&amp;#34;2023-04-20 09:34:21&amp;#34;, INTERVAL 15 MINUTE);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/subdate.png&#34; alt=&#34;image SUBDATE&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;subtime&#34;&gt;SUBTIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SUBTIME() function subtracts time from a time/datetime expression and then returns the new time/datetime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBTIME(datetime, time_interval)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUBTIME(&amp;#34;10:24:21&amp;#34;, &amp;#34;50&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/subtime.png&#34; alt=&#34;image SUBTIME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sysdate&#34;&gt;SYSDATE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The SYSDATE() function returns the current date and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SYSDATE()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SYSDATE();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/sysdate.png&#34; alt=&#34;image SYSDATE&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;time&#34;&gt;TIME&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The TIME() function extracts the time part from a given time/datetime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TIME(expression)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TIME(&amp;#34;2023-04-20 19:30:10.000001&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/time.png&#34; alt=&#34;image TIME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;time-format&#34;&gt;TIME FORMAT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The TIME_FORMAT() function formats a time by a specified format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TIME_FORMAT(time, format)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TIME_FORMAT(&amp;#34;19:30:10&amp;#34;, &amp;#34;%r&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/time-format.png&#34; alt=&#34;image TIME_FORMAT&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;time-to-sec&#34;&gt;TIME TO SEC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The TIME_TO_SEC() function converts a time value into seconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TIME_TO_SEC(time)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TIME_TO_SEC(&amp;#34;00:00:05&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/Time-to-sec.png&#34; alt=&#34;image TIME_TO_SEC&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;timediff&#34;&gt;TIMEDIFF&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The TIMEDIFF() function returns the difference between two time/datetime expressions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TIMEDIFF(time1, time2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TIMEDIFF(&amp;#34;2023-04-20 13:10:11&amp;#34;, &amp;#34;2017-06-15 13:10:10&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/timedif.png&#34; alt=&#34;image TIMEDIFF&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;timestamp&#34;&gt;TIMESTAMP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The TIMESTAMP() function returns a datetime value based on a date or datetime value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TIMESTAMP(expression, time)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TIMESTAMP(&amp;#34;2017-07-23&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/timestamp.png&#34; alt=&#34;image TIMESTAMP&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;to-days&#34;&gt;TO DAYS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The TO_DAYS() function returns the number of days between a date and year 0 (date &amp;ldquo;0000-00-00&amp;rdquo;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The TO_DAYS() function can be used only with dates within the Gregorian calendar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TO_DAYS(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TO_DAYS(&amp;#34;2023-04-20 09:34:00&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/to-day.png&#34; alt=&#34;image TO_DAYS&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;week&#34;&gt;WEEK&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The WEEK() function returns the week number for a given date (a number from 0 to 53).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WEEK(date, firstdayofweek)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT WEEK(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/week.png&#34; alt=&#34;image WEEK&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;weekday&#34;&gt;WEEKDAY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The WEEKDAY() function returns the weekday number for a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WEEKDAY(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT WEEKDAY(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/weekday.png&#34; alt=&#34;image WEEKDAY&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;weekofyear&#34;&gt;WEEKOFYEAR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The WEEKOFYEAR() function returns the week number for a given date (a number from 1 to 53).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WEEKOFYEAR(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT WEEKOFYEAR(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/weekyear.png&#34; alt=&#34;image WEEKOFYEAR&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;year&#34;&gt;YEAR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The YEAR() function returns the year part for a given date (a number from 1000 to 9999).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;YEAR(date)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT YEAR(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/year.png&#34; alt=&#34;image YEAR&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;yearweek&#34;&gt;YEARWEEK&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The YEARWEEK() function returns the year and week number (a number from 0 to 53) for a given date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;YEARWEEK(date, firstdayofweek)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT YEARWEEK(CURDATE());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/yearweek.png&#34; alt=&#34;image YEARWEEK&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;control-flow-function&#34;&gt;Control Flow Function&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-if&#34;&gt;MySQL IF()&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-ifnull&#34;&gt;MySQL IFNULL()&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-nullif&#34;&gt;MySQL NULLIF()&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#mysql-case&#34;&gt;MySQL CASE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-if&#34;&gt;MySQL IF()&lt;/h3&gt;
&lt;p&gt;The IF() function returns a value if a condition is TRUE, or another value if a condition is FALSE.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IF(condition, value_if_true, value_if_false)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT IF(STRCMP(&amp;#34;bye&amp;#34;,&amp;#34;bye&amp;#34;) = 0, &amp;#34;YES&amp;#34;, &amp;#34;NO&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/if.png&#34; alt=&#34;image IF&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mysql-ifnull&#34;&gt;MySQL IFNULL()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The IFNULL() function returns a specified value if the expression is NULL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the expression is NOT NULL, this function returns the expression.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IFNULL(expression, alt_value)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT IFNULL(&amp;#34;Hii&amp;#34;, &amp;#34;com&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/ifnull.png&#34; alt=&#34;image IFNull&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mysql-nullif&#34;&gt;MySQL NULLIF()&lt;/h3&gt;
&lt;p&gt;The NULLIF() function compares two expressions and returns NULL if they are equal. Otherwise, the first expression is returned.&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NULLIF(expr1, expr2)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT NULLIF(&amp;#34;Hello&amp;#34;, &amp;#34;world&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/nullif.png&#34; alt=&#34;image NULLIF&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mysql-case&#34;&gt;MySQL CASE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The CASE statement goes through conditions and return a value when the first condition is met (like an IF-THEN-ELSE statement). So, once a condition is true, it will stop reading and return the result.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no conditions are true, it will return the value in the ELSE clause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If there is no ELSE part and no conditions are true, it returns NULL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CASE
    WHEN condition1 THEN result1
    WHEN condition2 THEN result2
    WHEN conditionN THEN resultN
    ELSE result
END;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT FirstName, LastName, salary
FROM employee
ORDER BY
(CASE
    WHEN LastName IS NULL THEN salary
    ELSE LastName
END);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://padmanabhansaravanan.github.io/website/images-mysql/case.png&#34; alt=&#34;image case&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/workbench/en/wb-keys.html&#34;&gt;Refer this link for MySql shortcuts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/downloads/&#34;&gt;mysql setup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YSOY_NyOg40&#34;&gt;mysql installation video&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
